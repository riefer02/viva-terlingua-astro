---
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from '@/components/ui/card';
import type { ResourcesResource } from '@/types/strapi';
import strapi from '@/lib/api/strapi-client';
import { Download, Eye } from 'lucide-react';
import { getResourceDownloadInfo, formatFileSize } from '@/utils/resources';

interface Props {
  className?: string;
}

const { className } = Astro.props;

const response = await strapi.collection('resources').find({
  populate: '*',
});

if (!response.data) {
  throw new Error('Resources data not found');
}

// Filter out resources without files
const resources = (response.data as ResourcesResource[])
  .filter((resource) => resource.file !== null)
  .sort((a, b) => {
    const dateA = new Date(a.updatedAt || 0);
    const dateB = new Date(b.updatedAt || 0);
    return dateB.getTime() - dateA.getTime();
  });
---

<section class:list={['w-full', className]}>
  <div class="container px-4 md:px-6 mx-auto max-w-7xl">
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {
        resources.map((resource) => {
          const { url, filename, size } = getResourceDownloadInfo(resource);

          return (
            <Card className="flex flex-col h-full bg-card">
              <CardHeader>
                <CardTitle className="text-xl text-card-foreground">
                  {resource.name}
                </CardTitle>
                <CardDescription className="text-muted-foreground">
                  PDF Document â€¢ {formatFileSize(size)}
                </CardDescription>
              </CardHeader>
              <CardContent className="flex-grow space-y-4">
                <div class="flex flex-wrap gap-2">
                  <Badge variant="secondary">PDF Document</Badge>
                  <Badge variant="outline">{formatFileSize(size)}</Badge>
                </div>
              </CardContent>
              <CardFooter className="flex justify-end gap-4 pt-6">
                <a
                  href={url}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="inline-flex"
                >
                  <Button variant="outline" size="sm" className="group">
                    <Eye className="w-4 h-4 mr-2 transition-transform group-hover:scale-110" />
                    View
                  </Button>
                </a>
                <a href={url} download={filename} class="inline-flex">
                  <Button variant="default" size="sm" className="group">
                    <Download className="w-4 h-4 mr-2 transition-transform group-hover:scale-110" />
                    Download
                  </Button>
                </a>
              </CardFooter>
            </Card>
          );
        })
      }
    </div>
  </div>
</section>

<style>
  .resource-download-btn {
    transition: all 0.2s ease-in-out;
  }

  .resource-download-btn:hover {
    transform: translateY(-1px);
  }

  .resource-download-btn:active {
    transform: translateY(0);
  }
</style>
