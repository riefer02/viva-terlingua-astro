// Generated Types from Strapi API Documentation
// DO NOT EDIT THIS FILE MANUALLY

// Base Types
export type Nullable<T> = T | null;

export interface StrapiBaseAttributes {
  id: number;
  documentId: string;
  createdAt?: string;
  updatedAt?: string;
  publishedAt?: string;
  locale?: string;
}

export interface StrapiPagination {
  page: number;
  pageSize: number;
  pageCount: number;
  total: number;
}

export interface StrapiMedia {
  data: {
    id: number;
    attributes: {
      name: string;
      alternativeText: string | null;
      caption: string | null;
      width: number;
      height: number;
      formats: {
        thumbnail?: {
          url: string;
          width: number;
          height: number;
        };
        small?: {
          url: string;
          width: number;
          height: number;
        };
        medium?: {
          url: string;
          width: number;
          height: number;
        };
        large?: {
          url: string;
          width: number;
          height: number;
        };
      };
      hash: string;
      ext: string;
      mime: string;
      size: number;
      url: string;
      previewUrl: string | null;
      provider: string;
      createdAt: string;
      updatedAt: string;
    };
  } | null;
}

export interface StrapiCollectionResponse<T> {
  data: Array<T & StrapiBaseAttributes>;
  meta: {
    pagination: StrapiPagination;
  };
}

export interface StrapiEntityResponse<T> {
  data: T & StrapiBaseAttributes;
  meta: Record<string, unknown>;
}

export interface AboutPageRequest {
  data: {
    title?: string;
    marqueeImage?: number | string;
    quoteContent?: PageComponentQuoteComponent;
    pageContent?: PageComponentTextDisplayComponent;
    seoMeta?: PageComponentPageSeoComponent;
    locale?: string;
    localizations?: number | string[];
  };
}

export type AboutPageRequestCollection =
  StrapiCollectionResponse<AboutPageRequest>;
export type AboutPageRequestEntity = StrapiEntityResponse<AboutPageRequest>;

export interface AboutPageListResponse {
  data?: AboutPage[];
  meta?: {
    pagination?: {
      page?: number;
      pageSize?: number;
      pageCount?: number;
      total?: number;
    };
  };
}

export type AboutPageListResponseCollection =
  StrapiCollectionResponse<AboutPageListResponse>;
export type AboutPageListResponseEntity =
  StrapiEntityResponse<AboutPageListResponse>;

export interface AboutPage {
  id?: number;
  documentId?: string;
  title?: string;
  marqueeImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
      id?: number;
      documentId?: string;
    }[];
    folder?: {
      id?: number;
      documentId?: string;
      name?: string;
      pathId?: number;
      parent?: {
        id?: number;
        documentId?: string;
      };
      children?: {
        id?: number;
        documentId?: string;
      }[];
      files?: {
        id?: number;
        documentId?: string;
        name?: string;
        alternativeText?: string;
        caption?: string;
        width?: number;
        height?: number;
        formats?: any;
        hash?: string;
        ext?: string;
        mime?: string;
        size?: number;
        url?: string;
        previewUrl?: string;
        provider?: string;
        provider_metadata?: any;
        related?: {
          id?: number;
          documentId?: string;
        }[];
        folder?: {
          id?: number;
          documentId?: string;
        };
        folderPath?: string;
        createdAt?: string;
        updatedAt?: string;
        publishedAt?: string;
        createdBy?: {
          id?: number;
          documentId?: string;
          firstname?: string;
          lastname?: string;
          username?: string;
          email?: string;
          resetPasswordToken?: string;
          registrationToken?: string;
          isActive?: boolean;
          roles?: {
            id?: number;
            documentId?: string;
            name?: string;
            code?: string;
            description?: string;
            users?: {
              id?: number;
              documentId?: string;
            }[];
            permissions?: {
              id?: number;
              documentId?: string;
              action?: string;
              actionParameters?: any;
              subject?: string;
              properties?: any;
              conditions?: any;
              role?: {
                id?: number;
                documentId?: string;
              };
              createdAt?: string;
              updatedAt?: string;
              publishedAt?: string;
              createdBy?: {
                id?: number;
                documentId?: string;
              };
              updatedBy?: {
                id?: number;
                documentId?: string;
              };
              locale?: string;
              localizations?: {
                id?: number;
                documentId?: string;
              }[];
            }[];
            createdAt?: string;
            updatedAt?: string;
            publishedAt?: string;
            createdBy?: {
              id?: number;
              documentId?: string;
            };
            updatedBy?: {
              id?: number;
              documentId?: string;
            };
            locale?: string;
            localizations?: {
              id?: number;
              documentId?: string;
            }[];
          }[];
          blocked?: boolean;
          preferedLanguage?: string;
          createdAt?: string;
          updatedAt?: string;
          publishedAt?: string;
          createdBy?: {
            id?: number;
            documentId?: string;
          };
          updatedBy?: {
            id?: number;
            documentId?: string;
          };
          locale?: string;
          localizations?: {
            id?: number;
            documentId?: string;
          }[];
        };
        updatedBy?: {
          id?: number;
          documentId?: string;
        };
        locale?: string;
        localizations?: {
          id?: number;
          documentId?: string;
        }[];
      }[];
      path?: string;
      createdAt?: string;
      updatedAt?: string;
      publishedAt?: string;
      createdBy?: {
        id?: number;
        documentId?: string;
      };
      updatedBy?: {
        id?: number;
        documentId?: string;
      };
      locale?: string;
      localizations?: {
        id?: number;
        documentId?: string;
      }[];
    };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  };
  quoteContent?: PageComponentQuoteComponent;
  pageContent?: PageComponentTextDisplayComponent;
  seoMeta?: PageComponentPageSeoComponent;
  createdAt?: string;
  updatedAt?: string;
  publishedAt?: string;
  createdBy?: {
    id?: number;
    documentId?: string;
  };
  updatedBy?: {
    id?: number;
    documentId?: string;
  };
  locale?: string;
  localizations?: {
    id?: number;
    documentId?: string;
    title?: string;
    marqueeImage?: {
      id?: number;
      documentId?: string;
      name?: string;
      alternativeText?: string;
      caption?: string;
      width?: number;
      height?: number;
      formats?: any;
      hash?: string;
      ext?: string;
      mime?: string;
      size?: number;
      url?: string;
      previewUrl?: string;
      provider?: string;
      provider_metadata?: any;
      related?: {
        id?: number;
        documentId?: string;
      }[];
      folder?: {
        id?: number;
        documentId?: string;
      };
      folderPath?: string;
      createdAt?: string;
      updatedAt?: string;
      publishedAt?: string;
      createdBy?: {
        id?: number;
        documentId?: string;
      };
      updatedBy?: {
        id?: number;
        documentId?: string;
      };
      locale?: string;
      localizations?: {
        id?: number;
        documentId?: string;
      }[];
    };
    quoteContent?: PageComponentQuoteComponent;
    pageContent?: PageComponentTextDisplayComponent;
    seoMeta?: PageComponentPageSeoComponent;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  }[];
}

export type AboutPageCollection = StrapiCollectionResponse<AboutPage>;
export type AboutPageEntity = StrapiEntityResponse<AboutPage>;

export interface AboutPageResponse {
  data?: AboutPage;
  meta?: any;
}

export type AboutPageResponseCollection =
  StrapiCollectionResponse<AboutPageResponse>;
export type AboutPageResponseEntity = StrapiEntityResponse<AboutPageResponse>;

export interface PageComponentQuoteComponent {
  id?: number;
  author?: string;
  text?: string;
}

export type PageComponentQuoteComponentCollection =
  StrapiCollectionResponse<PageComponentQuoteComponent>;
export type PageComponentQuoteComponentEntity =
  StrapiEntityResponse<PageComponentQuoteComponent>;

export interface UtilityComponentLinkComponent {
  id?: number;
  label?: string;
  url?: string;
  type?: 'internal' | 'external';
}

export type UtilityComponentLinkComponentCollection =
  StrapiCollectionResponse<UtilityComponentLinkComponent>;
export type UtilityComponentLinkComponentEntity =
  StrapiEntityResponse<UtilityComponentLinkComponent>;

export interface PageComponentTextDisplayComponent {
  id?: number;
  author?: string;
  postDate?: string;
  primaryText?: string;
  Links?: UtilityComponentLinkComponent[];
}

export type PageComponentTextDisplayComponentCollection =
  StrapiCollectionResponse<PageComponentTextDisplayComponent>;
export type PageComponentTextDisplayComponentEntity =
  StrapiEntityResponse<PageComponentTextDisplayComponent>;

export interface PageComponentPageSeoComponent {
  id?: number;
  title?: string;
  description?: string;
  image?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
      id?: number;
      documentId?: string;
    }[];
    folder?: {
      id?: number;
      documentId?: string;
    };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  };
  article?: boolean;
}

export type PageComponentPageSeoComponentCollection =
  StrapiCollectionResponse<PageComponentPageSeoComponent>;
export type PageComponentPageSeoComponentEntity =
  StrapiEntityResponse<PageComponentPageSeoComponent>;

export interface BlogRequest {
  data: {
    title?: string;
    author?: string;
    description?: string;
    heroImage?: BlogComponentMediaImageWithMetaComponent;
    bodyContent?: any[];
    featuredPost?: boolean;
    tags?: number | string[];
    locale?: string;
    localizations?: number | string[];
  };
}

export type BlogRequestCollection = StrapiCollectionResponse<BlogRequest>;
export type BlogRequestEntity = StrapiEntityResponse<BlogRequest>;

export interface BlogListResponse {
  data?: Blog[];
  meta?: {
    pagination?: {
      page?: number;
      pageSize?: number;
      pageCount?: number;
      total?: number;
    };
  };
}

export type BlogListResponseCollection =
  StrapiCollectionResponse<BlogListResponse>;
export type BlogListResponseEntity = StrapiEntityResponse<BlogListResponse>;

export interface Blog {
  id?: number;
  documentId?: string;
  title?: string;
  author?: string;
  description?: string;
  heroImage?: BlogComponentMediaImageWithMetaComponent;
  bodyContent?: any[];
  featuredPost?: boolean;
  tags?: {
    id?: number;
    documentId?: string;
    name?: string;
    slug?: string;
    blogs?: {
      id?: number;
      documentId?: string;
      title?: string;
      author?: string;
      description?: string;
      heroImage?: BlogComponentMediaImageWithMetaComponent;
      bodyContent?: any[];
      featuredPost?: boolean;
      tags?: {
        id?: number;
        documentId?: string;
      }[];
      createdAt?: string;
      updatedAt?: string;
      publishedAt?: string;
      createdBy?: {
        id?: number;
        documentId?: string;
      };
      updatedBy?: {
        id?: number;
        documentId?: string;
      };
      locale?: string;
      localizations?: {
        id?: number;
        documentId?: string;
      }[];
    }[];
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  }[];
  createdAt?: string;
  updatedAt?: string;
  publishedAt?: string;
  createdBy?: {
    id?: number;
    documentId?: string;
  };
  updatedBy?: {
    id?: number;
    documentId?: string;
  };
  locale?: string;
  localizations?: {
    id?: number;
    documentId?: string;
  }[];
}

export type BlogCollection = StrapiCollectionResponse<Blog>;
export type BlogEntity = StrapiEntityResponse<Blog>;

export interface BlogResponse {
  data?: Blog;
  meta?: any;
}

export type BlogResponseCollection = StrapiCollectionResponse<BlogResponse>;
export type BlogResponseEntity = StrapiEntityResponse<BlogResponse>;

export interface BlogComponentMediaImageWithMetaComponent {
  id?: number;
  imageAlt?: string;
  imageMedia?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
      id?: number;
      documentId?: string;
    }[];
    folder?: {
      id?: number;
      documentId?: string;
    };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  };
}

export type BlogComponentMediaImageWithMetaComponentCollection =
  StrapiCollectionResponse<BlogComponentMediaImageWithMetaComponent>;
export type BlogComponentMediaImageWithMetaComponentEntity =
  StrapiEntityResponse<BlogComponentMediaImageWithMetaComponent>;

export interface BlogComponentDynamicBlogContentComponent {
  id?: number;
  __component?: 'blog-component.dynamic-blog-content';
  layoutType?: 'text' | 'image' | 'textRightImageLeft' | 'textLeftImageRight';
  textContent?: string;
  imageContent?: BlogComponentMediaImageWithMetaComponent;
}

export type BlogComponentDynamicBlogContentComponentCollection =
  StrapiCollectionResponse<BlogComponentDynamicBlogContentComponent>;
export type BlogComponentDynamicBlogContentComponentEntity =
  StrapiEntityResponse<BlogComponentDynamicBlogContentComponent>;

export interface EventsEventRequest {
  data: {
    title?: string;
    description?: string;
    startDateTime?: string;
    marqueeImage?: number | string;
    endDateTime?: string;
    slug?: string;
    seoMeta?: PageComponentPageSeoComponent;
    squareImage?: number | string;
    panelImage?: number | string;
    locale?: string;
    localizations?: number | string[];
  };
}

export type EventsEventRequestCollection =
  StrapiCollectionResponse<EventsEventRequest>;
export type EventsEventRequestEntity = StrapiEntityResponse<EventsEventRequest>;

export interface EventsEventListResponse {
  data?: EventsEvent[];
  meta?: {
    pagination?: {
      page?: number;
      pageSize?: number;
      pageCount?: number;
      total?: number;
    };
  };
}

export type EventsEventListResponseCollection =
  StrapiCollectionResponse<EventsEventListResponse>;
export type EventsEventListResponseEntity =
  StrapiEntityResponse<EventsEventListResponse>;

export interface EventsEvent {
  id?: number;
  documentId?: string;
  title?: string;
  description?: string;
  startDateTime?: string;
  marqueeImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
      id?: number;
      documentId?: string;
    }[];
    folder?: {
      id?: number;
      documentId?: string;
      name?: string;
      pathId?: number;
      parent?: {
        id?: number;
        documentId?: string;
      };
      children?: {
        id?: number;
        documentId?: string;
      }[];
      files?: {
        id?: number;
        documentId?: string;
        name?: string;
        alternativeText?: string;
        caption?: string;
        width?: number;
        height?: number;
        formats?: any;
        hash?: string;
        ext?: string;
        mime?: string;
        size?: number;
        url?: string;
        previewUrl?: string;
        provider?: string;
        provider_metadata?: any;
        related?: {
          id?: number;
          documentId?: string;
        }[];
        folder?: {
          id?: number;
          documentId?: string;
        };
        folderPath?: string;
        createdAt?: string;
        updatedAt?: string;
        publishedAt?: string;
        createdBy?: {
          id?: number;
          documentId?: string;
          firstname?: string;
          lastname?: string;
          username?: string;
          email?: string;
          resetPasswordToken?: string;
          registrationToken?: string;
          isActive?: boolean;
          roles?: {
            id?: number;
            documentId?: string;
            name?: string;
            code?: string;
            description?: string;
            users?: {
              id?: number;
              documentId?: string;
            }[];
            permissions?: {
              id?: number;
              documentId?: string;
              action?: string;
              actionParameters?: any;
              subject?: string;
              properties?: any;
              conditions?: any;
              role?: {
                id?: number;
                documentId?: string;
              };
              createdAt?: string;
              updatedAt?: string;
              publishedAt?: string;
              createdBy?: {
                id?: number;
                documentId?: string;
              };
              updatedBy?: {
                id?: number;
                documentId?: string;
              };
              locale?: string;
              localizations?: {
                id?: number;
                documentId?: string;
              }[];
            }[];
            createdAt?: string;
            updatedAt?: string;
            publishedAt?: string;
            createdBy?: {
              id?: number;
              documentId?: string;
            };
            updatedBy?: {
              id?: number;
              documentId?: string;
            };
            locale?: string;
            localizations?: {
              id?: number;
              documentId?: string;
            }[];
          }[];
          blocked?: boolean;
          preferedLanguage?: string;
          createdAt?: string;
          updatedAt?: string;
          publishedAt?: string;
          createdBy?: {
            id?: number;
            documentId?: string;
          };
          updatedBy?: {
            id?: number;
            documentId?: string;
          };
          locale?: string;
          localizations?: {
            id?: number;
            documentId?: string;
          }[];
        };
        updatedBy?: {
          id?: number;
          documentId?: string;
        };
        locale?: string;
        localizations?: {
          id?: number;
          documentId?: string;
        }[];
      }[];
      path?: string;
      createdAt?: string;
      updatedAt?: string;
      publishedAt?: string;
      createdBy?: {
        id?: number;
        documentId?: string;
      };
      updatedBy?: {
        id?: number;
        documentId?: string;
      };
      locale?: string;
      localizations?: {
        id?: number;
        documentId?: string;
      }[];
    };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  };
  endDateTime?: string;
  slug?: string;
  seoMeta?: PageComponentPageSeoComponent;
  squareImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
      id?: number;
      documentId?: string;
    }[];
    folder?: {
      id?: number;
      documentId?: string;
    };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  };
  panelImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
      id?: number;
      documentId?: string;
    }[];
    folder?: {
      id?: number;
      documentId?: string;
    };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  };
  createdAt?: string;
  updatedAt?: string;
  publishedAt?: string;
  createdBy?: {
    id?: number;
    documentId?: string;
  };
  updatedBy?: {
    id?: number;
    documentId?: string;
  };
  locale?: string;
  localizations?: {
    id?: number;
    documentId?: string;
    title?: string;
    description?: string;
    startDateTime?: string;
    marqueeImage?: {
      id?: number;
      documentId?: string;
      name?: string;
      alternativeText?: string;
      caption?: string;
      width?: number;
      height?: number;
      formats?: any;
      hash?: string;
      ext?: string;
      mime?: string;
      size?: number;
      url?: string;
      previewUrl?: string;
      provider?: string;
      provider_metadata?: any;
      related?: {
        id?: number;
        documentId?: string;
      }[];
      folder?: {
        id?: number;
        documentId?: string;
      };
      folderPath?: string;
      createdAt?: string;
      updatedAt?: string;
      publishedAt?: string;
      createdBy?: {
        id?: number;
        documentId?: string;
      };
      updatedBy?: {
        id?: number;
        documentId?: string;
      };
      locale?: string;
      localizations?: {
        id?: number;
        documentId?: string;
      }[];
    };
    endDateTime?: string;
    slug?: string;
    seoMeta?: PageComponentPageSeoComponent;
    squareImage?: {
      id?: number;
      documentId?: string;
      name?: string;
      alternativeText?: string;
      caption?: string;
      width?: number;
      height?: number;
      formats?: any;
      hash?: string;
      ext?: string;
      mime?: string;
      size?: number;
      url?: string;
      previewUrl?: string;
      provider?: string;
      provider_metadata?: any;
      related?: {
        id?: number;
        documentId?: string;
      }[];
      folder?: {
        id?: number;
        documentId?: string;
      };
      folderPath?: string;
      createdAt?: string;
      updatedAt?: string;
      publishedAt?: string;
      createdBy?: {
        id?: number;
        documentId?: string;
      };
      updatedBy?: {
        id?: number;
        documentId?: string;
      };
      locale?: string;
      localizations?: {
        id?: number;
        documentId?: string;
      }[];
    };
    panelImage?: {
      id?: number;
      documentId?: string;
      name?: string;
      alternativeText?: string;
      caption?: string;
      width?: number;
      height?: number;
      formats?: any;
      hash?: string;
      ext?: string;
      mime?: string;
      size?: number;
      url?: string;
      previewUrl?: string;
      provider?: string;
      provider_metadata?: any;
      related?: {
        id?: number;
        documentId?: string;
      }[];
      folder?: {
        id?: number;
        documentId?: string;
      };
      folderPath?: string;
      createdAt?: string;
      updatedAt?: string;
      publishedAt?: string;
      createdBy?: {
        id?: number;
        documentId?: string;
      };
      updatedBy?: {
        id?: number;
        documentId?: string;
      };
      locale?: string;
      localizations?: {
        id?: number;
        documentId?: string;
      }[];
    };
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  }[];
}

export type EventsEventCollection = StrapiCollectionResponse<EventsEvent>;
export type EventsEventEntity = StrapiEntityResponse<EventsEvent>;

export interface EventsEventResponse {
  data?: EventsEvent;
  meta?: any;
}

export type EventsEventResponseCollection =
  StrapiCollectionResponse<EventsEventResponse>;
export type EventsEventResponseEntity =
  StrapiEntityResponse<EventsEventResponse>;

export interface FaqRequest {
  data: {
    question: string;
    answer?: string;
    category?: 'general' | 'logistics' | 'etiquette' | 'tickets' | 'cook off';
    order?: number;
    locale?: string;
    localizations?: number | string[];
  };
}

export type FaqRequestCollection = StrapiCollectionResponse<FaqRequest>;
export type FaqRequestEntity = StrapiEntityResponse<FaqRequest>;

export interface FaqListResponse {
  data?: Faq[];
  meta?: {
    pagination?: {
      page?: number;
      pageSize?: number;
      pageCount?: number;
      total?: number;
    };
  };
}

export type FaqListResponseCollection =
  StrapiCollectionResponse<FaqListResponse>;
export type FaqListResponseEntity = StrapiEntityResponse<FaqListResponse>;

export interface Faq {
  id?: number;
  documentId?: string;
  question: string;
  answer?: string;
  category?: 'general' | 'logistics' | 'etiquette' | 'tickets' | 'cook off';
  order?: number;
  createdAt?: string;
  updatedAt?: string;
  publishedAt?: string;
  createdBy?: {
    id?: number;
    documentId?: string;
    firstname?: string;
    lastname?: string;
    username?: string;
    email?: string;
    resetPasswordToken?: string;
    registrationToken?: string;
    isActive?: boolean;
    roles?: {
      id?: number;
      documentId?: string;
      name?: string;
      code?: string;
      description?: string;
      users?: {
        id?: number;
        documentId?: string;
      }[];
      permissions?: {
        id?: number;
        documentId?: string;
        action?: string;
        actionParameters?: any;
        subject?: string;
        properties?: any;
        conditions?: any;
        role?: {
          id?: number;
          documentId?: string;
        };
        createdAt?: string;
        updatedAt?: string;
        publishedAt?: string;
        createdBy?: {
          id?: number;
          documentId?: string;
        };
        updatedBy?: {
          id?: number;
          documentId?: string;
        };
        locale?: string;
        localizations?: {
          id?: number;
          documentId?: string;
        }[];
      }[];
      createdAt?: string;
      updatedAt?: string;
      publishedAt?: string;
      createdBy?: {
        id?: number;
        documentId?: string;
      };
      updatedBy?: {
        id?: number;
        documentId?: string;
      };
      locale?: string;
      localizations?: {
        id?: number;
        documentId?: string;
      }[];
    }[];
    blocked?: boolean;
    preferedLanguage?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  };
  updatedBy?: {
    id?: number;
    documentId?: string;
  };
  locale?: string;
  localizations?: {
    id?: number;
    documentId?: string;
    question?: string;
    answer?: string;
    category?: 'general' | 'logistics' | 'etiquette' | 'tickets' | 'cook off';
    order?: number;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  }[];
}

export type FaqCollection = StrapiCollectionResponse<Faq>;
export type FaqEntity = StrapiEntityResponse<Faq>;

export interface FaqResponse {
  data?: Faq;
  meta?: any;
}

export type FaqResponseCollection = StrapiCollectionResponse<FaqResponse>;
export type FaqResponseEntity = StrapiEntityResponse<FaqResponse>;

export interface GalleryImagesGalleryImageRequest {
  data: {
    image?: number | string;
    title?: string;
    description?: string;
    page?: string;
    role?: 'marquee' | 'panel' | 'poster' | 'mural';
    photographer?: string;
    year?: number;
    locale?: string;
    localizations?: number | string[];
  };
}

export type GalleryImagesGalleryImageRequestCollection =
  StrapiCollectionResponse<GalleryImagesGalleryImageRequest>;
export type GalleryImagesGalleryImageRequestEntity =
  StrapiEntityResponse<GalleryImagesGalleryImageRequest>;

export interface GalleryImagesGalleryImageListResponse {
  data?: GalleryImagesGalleryImage[];
  meta?: {
    pagination?: {
      page?: number;
      pageSize?: number;
      pageCount?: number;
      total?: number;
    };
  };
}

export type GalleryImagesGalleryImageListResponseCollection =
  StrapiCollectionResponse<GalleryImagesGalleryImageListResponse>;
export type GalleryImagesGalleryImageListResponseEntity =
  StrapiEntityResponse<GalleryImagesGalleryImageListResponse>;

export interface GalleryImagesGalleryImage {
  id?: number;
  documentId?: string;
  image?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
      id?: number;
      documentId?: string;
    }[];
    folder?: {
      id?: number;
      documentId?: string;
      name?: string;
      pathId?: number;
      parent?: {
        id?: number;
        documentId?: string;
      };
      children?: {
        id?: number;
        documentId?: string;
      }[];
      files?: {
        id?: number;
        documentId?: string;
        name?: string;
        alternativeText?: string;
        caption?: string;
        width?: number;
        height?: number;
        formats?: any;
        hash?: string;
        ext?: string;
        mime?: string;
        size?: number;
        url?: string;
        previewUrl?: string;
        provider?: string;
        provider_metadata?: any;
        related?: {
          id?: number;
          documentId?: string;
        }[];
        folder?: {
          id?: number;
          documentId?: string;
        };
        folderPath?: string;
        createdAt?: string;
        updatedAt?: string;
        publishedAt?: string;
        createdBy?: {
          id?: number;
          documentId?: string;
          firstname?: string;
          lastname?: string;
          username?: string;
          email?: string;
          resetPasswordToken?: string;
          registrationToken?: string;
          isActive?: boolean;
          roles?: {
            id?: number;
            documentId?: string;
            name?: string;
            code?: string;
            description?: string;
            users?: {
              id?: number;
              documentId?: string;
            }[];
            permissions?: {
              id?: number;
              documentId?: string;
              action?: string;
              actionParameters?: any;
              subject?: string;
              properties?: any;
              conditions?: any;
              role?: {
                id?: number;
                documentId?: string;
              };
              createdAt?: string;
              updatedAt?: string;
              publishedAt?: string;
              createdBy?: {
                id?: number;
                documentId?: string;
              };
              updatedBy?: {
                id?: number;
                documentId?: string;
              };
              locale?: string;
              localizations?: {
                id?: number;
                documentId?: string;
              }[];
            }[];
            createdAt?: string;
            updatedAt?: string;
            publishedAt?: string;
            createdBy?: {
              id?: number;
              documentId?: string;
            };
            updatedBy?: {
              id?: number;
              documentId?: string;
            };
            locale?: string;
            localizations?: {
              id?: number;
              documentId?: string;
            }[];
          }[];
          blocked?: boolean;
          preferedLanguage?: string;
          createdAt?: string;
          updatedAt?: string;
          publishedAt?: string;
          createdBy?: {
            id?: number;
            documentId?: string;
          };
          updatedBy?: {
            id?: number;
            documentId?: string;
          };
          locale?: string;
          localizations?: {
            id?: number;
            documentId?: string;
          }[];
        };
        updatedBy?: {
          id?: number;
          documentId?: string;
        };
        locale?: string;
        localizations?: {
          id?: number;
          documentId?: string;
        }[];
      }[];
      path?: string;
      createdAt?: string;
      updatedAt?: string;
      publishedAt?: string;
      createdBy?: {
        id?: number;
        documentId?: string;
      };
      updatedBy?: {
        id?: number;
        documentId?: string;
      };
      locale?: string;
      localizations?: {
        id?: number;
        documentId?: string;
      }[];
    };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  };
  title?: string;
  description?: string;
  page?: string;
  role?: 'marquee' | 'panel' | 'poster' | 'mural';
  photographer?: string;
  year?: number;
  createdAt?: string;
  updatedAt?: string;
  publishedAt?: string;
  createdBy?: {
    id?: number;
    documentId?: string;
  };
  updatedBy?: {
    id?: number;
    documentId?: string;
  };
  locale?: string;
  localizations?: {
    id?: number;
    documentId?: string;
    image?: {
      id?: number;
      documentId?: string;
      name?: string;
      alternativeText?: string;
      caption?: string;
      width?: number;
      height?: number;
      formats?: any;
      hash?: string;
      ext?: string;
      mime?: string;
      size?: number;
      url?: string;
      previewUrl?: string;
      provider?: string;
      provider_metadata?: any;
      related?: {
        id?: number;
        documentId?: string;
      }[];
      folder?: {
        id?: number;
        documentId?: string;
      };
      folderPath?: string;
      createdAt?: string;
      updatedAt?: string;
      publishedAt?: string;
      createdBy?: {
        id?: number;
        documentId?: string;
      };
      updatedBy?: {
        id?: number;
        documentId?: string;
      };
      locale?: string;
      localizations?: {
        id?: number;
        documentId?: string;
      }[];
    };
    title?: string;
    description?: string;
    page?: string;
    role?: 'marquee' | 'panel' | 'poster' | 'mural';
    photographer?: string;
    year?: number;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  }[];
}

export type GalleryImagesGalleryImageCollection =
  StrapiCollectionResponse<GalleryImagesGalleryImage>;
export type GalleryImagesGalleryImageEntity =
  StrapiEntityResponse<GalleryImagesGalleryImage>;

export interface GalleryImagesGalleryImageResponse {
  data?: GalleryImagesGalleryImage;
  meta?: any;
}

export type GalleryImagesGalleryImageResponseCollection =
  StrapiCollectionResponse<GalleryImagesGalleryImageResponse>;
export type GalleryImagesGalleryImageResponseEntity =
  StrapiEntityResponse<GalleryImagesGalleryImageResponse>;

export interface HomePageRequest {
  data: {
    title?: string;
    marqueeImage?: number | string;
    primaryText?: string;
    featured?: PageComponentFeaturedSectionComponent;
    quoteContent?: PageComponentQuoteComponent;
    seoMeta?: PageComponentPageSeoComponent;
    panelImage?: number | string;
    secondaryText?: string;
    locale?: string;
    localizations?: number | string[];
  };
}

export type HomePageRequestCollection =
  StrapiCollectionResponse<HomePageRequest>;
export type HomePageRequestEntity = StrapiEntityResponse<HomePageRequest>;

export interface HomePageListResponse {
  data?: HomePage[];
  meta?: {
    pagination?: {
      page?: number;
      pageSize?: number;
      pageCount?: number;
      total?: number;
    };
  };
}

export type HomePageListResponseCollection =
  StrapiCollectionResponse<HomePageListResponse>;
export type HomePageListResponseEntity =
  StrapiEntityResponse<HomePageListResponse>;

export interface HomePage {
  id?: number;
  documentId?: string;
  title?: string;
  marqueeImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
      id?: number;
      documentId?: string;
    }[];
    folder?: {
      id?: number;
      documentId?: string;
      name?: string;
      pathId?: number;
      parent?: {
        id?: number;
        documentId?: string;
      };
      children?: {
        id?: number;
        documentId?: string;
      }[];
      files?: {
        id?: number;
        documentId?: string;
        name?: string;
        alternativeText?: string;
        caption?: string;
        width?: number;
        height?: number;
        formats?: any;
        hash?: string;
        ext?: string;
        mime?: string;
        size?: number;
        url?: string;
        previewUrl?: string;
        provider?: string;
        provider_metadata?: any;
        related?: {
          id?: number;
          documentId?: string;
        }[];
        folder?: {
          id?: number;
          documentId?: string;
        };
        folderPath?: string;
        createdAt?: string;
        updatedAt?: string;
        publishedAt?: string;
        createdBy?: {
          id?: number;
          documentId?: string;
          firstname?: string;
          lastname?: string;
          username?: string;
          email?: string;
          resetPasswordToken?: string;
          registrationToken?: string;
          isActive?: boolean;
          roles?: {
            id?: number;
            documentId?: string;
            name?: string;
            code?: string;
            description?: string;
            users?: {
              id?: number;
              documentId?: string;
            }[];
            permissions?: {
              id?: number;
              documentId?: string;
              action?: string;
              actionParameters?: any;
              subject?: string;
              properties?: any;
              conditions?: any;
              role?: {
                id?: number;
                documentId?: string;
              };
              createdAt?: string;
              updatedAt?: string;
              publishedAt?: string;
              createdBy?: {
                id?: number;
                documentId?: string;
              };
              updatedBy?: {
                id?: number;
                documentId?: string;
              };
              locale?: string;
              localizations?: {
                id?: number;
                documentId?: string;
              }[];
            }[];
            createdAt?: string;
            updatedAt?: string;
            publishedAt?: string;
            createdBy?: {
              id?: number;
              documentId?: string;
            };
            updatedBy?: {
              id?: number;
              documentId?: string;
            };
            locale?: string;
            localizations?: {
              id?: number;
              documentId?: string;
            }[];
          }[];
          blocked?: boolean;
          preferedLanguage?: string;
          createdAt?: string;
          updatedAt?: string;
          publishedAt?: string;
          createdBy?: {
            id?: number;
            documentId?: string;
          };
          updatedBy?: {
            id?: number;
            documentId?: string;
          };
          locale?: string;
          localizations?: {
            id?: number;
            documentId?: string;
          }[];
        };
        updatedBy?: {
          id?: number;
          documentId?: string;
        };
        locale?: string;
        localizations?: {
          id?: number;
          documentId?: string;
        }[];
      }[];
      path?: string;
      createdAt?: string;
      updatedAt?: string;
      publishedAt?: string;
      createdBy?: {
        id?: number;
        documentId?: string;
      };
      updatedBy?: {
        id?: number;
        documentId?: string;
      };
      locale?: string;
      localizations?: {
        id?: number;
        documentId?: string;
      }[];
    };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  };
  primaryText?: string;
  featured?: PageComponentFeaturedSectionComponent;
  quoteContent?: PageComponentQuoteComponent;
  seoMeta?: PageComponentPageSeoComponent;
  panelImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
      id?: number;
      documentId?: string;
    }[];
    folder?: {
      id?: number;
      documentId?: string;
    };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  };
  secondaryText?: string;
  createdAt?: string;
  updatedAt?: string;
  publishedAt?: string;
  createdBy?: {
    id?: number;
    documentId?: string;
  };
  updatedBy?: {
    id?: number;
    documentId?: string;
  };
  locale?: string;
  localizations?: {
    id?: number;
    documentId?: string;
    title?: string;
    marqueeImage?: {
      id?: number;
      documentId?: string;
      name?: string;
      alternativeText?: string;
      caption?: string;
      width?: number;
      height?: number;
      formats?: any;
      hash?: string;
      ext?: string;
      mime?: string;
      size?: number;
      url?: string;
      previewUrl?: string;
      provider?: string;
      provider_metadata?: any;
      related?: {
        id?: number;
        documentId?: string;
      }[];
      folder?: {
        id?: number;
        documentId?: string;
      };
      folderPath?: string;
      createdAt?: string;
      updatedAt?: string;
      publishedAt?: string;
      createdBy?: {
        id?: number;
        documentId?: string;
      };
      updatedBy?: {
        id?: number;
        documentId?: string;
      };
      locale?: string;
      localizations?: {
        id?: number;
        documentId?: string;
      }[];
    };
    primaryText?: string;
    featured?: PageComponentFeaturedSectionComponent;
    quoteContent?: PageComponentQuoteComponent;
    seoMeta?: PageComponentPageSeoComponent;
    panelImage?: {
      id?: number;
      documentId?: string;
      name?: string;
      alternativeText?: string;
      caption?: string;
      width?: number;
      height?: number;
      formats?: any;
      hash?: string;
      ext?: string;
      mime?: string;
      size?: number;
      url?: string;
      previewUrl?: string;
      provider?: string;
      provider_metadata?: any;
      related?: {
        id?: number;
        documentId?: string;
      }[];
      folder?: {
        id?: number;
        documentId?: string;
      };
      folderPath?: string;
      createdAt?: string;
      updatedAt?: string;
      publishedAt?: string;
      createdBy?: {
        id?: number;
        documentId?: string;
      };
      updatedBy?: {
        id?: number;
        documentId?: string;
      };
      locale?: string;
      localizations?: {
        id?: number;
        documentId?: string;
      }[];
    };
    secondaryText?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  }[];
}

export type HomePageCollection = StrapiCollectionResponse<HomePage>;
export type HomePageEntity = StrapiEntityResponse<HomePage>;

export interface HomePageResponse {
  data?: HomePage;
  meta?: any;
}

export type HomePageResponseCollection =
  StrapiCollectionResponse<HomePageResponse>;
export type HomePageResponseEntity = StrapiEntityResponse<HomePageResponse>;

export interface PageComponentFeaturedItemComponent {
  id?: number;
  title?: string;
  slug?: string;
  description?: string;
  image?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
      id?: number;
      documentId?: string;
    }[];
    folder?: {
      id?: number;
      documentId?: string;
    };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  };
  calloutText?: string;
}

export type PageComponentFeaturedItemComponentCollection =
  StrapiCollectionResponse<PageComponentFeaturedItemComponent>;
export type PageComponentFeaturedItemComponentEntity =
  StrapiEntityResponse<PageComponentFeaturedItemComponent>;

export interface PageComponentFeaturedSectionComponent {
  id?: number;
  featuresList?: PageComponentFeaturedItemComponent[];
}

export type PageComponentFeaturedSectionComponentCollection =
  StrapiCollectionResponse<PageComponentFeaturedSectionComponent>;
export type PageComponentFeaturedSectionComponentEntity =
  StrapiEntityResponse<PageComponentFeaturedSectionComponent>;

export interface LocalAttractionsLocalAttractionRequest {
  data: {
    name?: string;
    url?: string;
    marqueeImage?: number | string;
    description?: string;
    startTime?: string;
    endTime?: string;
    startDate?: string;
    endDate?: string;
    slug?: string;
    type?: 'lodging' | 'adventure' | 'dining';
    squareImage?: number | string;
    locale?: string;
    localizations?: number | string[];
  };
}

export type LocalAttractionsLocalAttractionRequestCollection =
  StrapiCollectionResponse<LocalAttractionsLocalAttractionRequest>;
export type LocalAttractionsLocalAttractionRequestEntity =
  StrapiEntityResponse<LocalAttractionsLocalAttractionRequest>;

export interface LocalAttractionsLocalAttractionListResponse {
  data?: LocalAttractionsLocalAttraction[];
  meta?: {
    pagination?: {
      page?: number;
      pageSize?: number;
      pageCount?: number;
      total?: number;
    };
  };
}

export type LocalAttractionsLocalAttractionListResponseCollection =
  StrapiCollectionResponse<LocalAttractionsLocalAttractionListResponse>;
export type LocalAttractionsLocalAttractionListResponseEntity =
  StrapiEntityResponse<LocalAttractionsLocalAttractionListResponse>;

export interface LocalAttractionsLocalAttraction {
  id?: number;
  documentId?: string;
  name?: string;
  url?: string;
  marqueeImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
      id?: number;
      documentId?: string;
    }[];
    folder?: {
      id?: number;
      documentId?: string;
      name?: string;
      pathId?: number;
      parent?: {
        id?: number;
        documentId?: string;
      };
      children?: {
        id?: number;
        documentId?: string;
      }[];
      files?: {
        id?: number;
        documentId?: string;
        name?: string;
        alternativeText?: string;
        caption?: string;
        width?: number;
        height?: number;
        formats?: any;
        hash?: string;
        ext?: string;
        mime?: string;
        size?: number;
        url?: string;
        previewUrl?: string;
        provider?: string;
        provider_metadata?: any;
        related?: {
          id?: number;
          documentId?: string;
        }[];
        folder?: {
          id?: number;
          documentId?: string;
        };
        folderPath?: string;
        createdAt?: string;
        updatedAt?: string;
        publishedAt?: string;
        createdBy?: {
          id?: number;
          documentId?: string;
          firstname?: string;
          lastname?: string;
          username?: string;
          email?: string;
          resetPasswordToken?: string;
          registrationToken?: string;
          isActive?: boolean;
          roles?: {
            id?: number;
            documentId?: string;
            name?: string;
            code?: string;
            description?: string;
            users?: {
              id?: number;
              documentId?: string;
            }[];
            permissions?: {
              id?: number;
              documentId?: string;
              action?: string;
              actionParameters?: any;
              subject?: string;
              properties?: any;
              conditions?: any;
              role?: {
                id?: number;
                documentId?: string;
              };
              createdAt?: string;
              updatedAt?: string;
              publishedAt?: string;
              createdBy?: {
                id?: number;
                documentId?: string;
              };
              updatedBy?: {
                id?: number;
                documentId?: string;
              };
              locale?: string;
              localizations?: {
                id?: number;
                documentId?: string;
              }[];
            }[];
            createdAt?: string;
            updatedAt?: string;
            publishedAt?: string;
            createdBy?: {
              id?: number;
              documentId?: string;
            };
            updatedBy?: {
              id?: number;
              documentId?: string;
            };
            locale?: string;
            localizations?: {
              id?: number;
              documentId?: string;
            }[];
          }[];
          blocked?: boolean;
          preferedLanguage?: string;
          createdAt?: string;
          updatedAt?: string;
          publishedAt?: string;
          createdBy?: {
            id?: number;
            documentId?: string;
          };
          updatedBy?: {
            id?: number;
            documentId?: string;
          };
          locale?: string;
          localizations?: {
            id?: number;
            documentId?: string;
          }[];
        };
        updatedBy?: {
          id?: number;
          documentId?: string;
        };
        locale?: string;
        localizations?: {
          id?: number;
          documentId?: string;
        }[];
      }[];
      path?: string;
      createdAt?: string;
      updatedAt?: string;
      publishedAt?: string;
      createdBy?: {
        id?: number;
        documentId?: string;
      };
      updatedBy?: {
        id?: number;
        documentId?: string;
      };
      locale?: string;
      localizations?: {
        id?: number;
        documentId?: string;
      }[];
    };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  };
  description?: string;
  startTime?: string;
  endTime?: string;
  startDate?: string;
  endDate?: string;
  slug?: string;
  type?: 'lodging' | 'adventure' | 'dining';
  squareImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
      id?: number;
      documentId?: string;
    }[];
    folder?: {
      id?: number;
      documentId?: string;
    };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  };
  createdAt?: string;
  updatedAt?: string;
  publishedAt?: string;
  createdBy?: {
    id?: number;
    documentId?: string;
  };
  updatedBy?: {
    id?: number;
    documentId?: string;
  };
  locale?: string;
  localizations?: {
    id?: number;
    documentId?: string;
    name?: string;
    url?: string;
    marqueeImage?: {
      id?: number;
      documentId?: string;
      name?: string;
      alternativeText?: string;
      caption?: string;
      width?: number;
      height?: number;
      formats?: any;
      hash?: string;
      ext?: string;
      mime?: string;
      size?: number;
      url?: string;
      previewUrl?: string;
      provider?: string;
      provider_metadata?: any;
      related?: {
        id?: number;
        documentId?: string;
      }[];
      folder?: {
        id?: number;
        documentId?: string;
      };
      folderPath?: string;
      createdAt?: string;
      updatedAt?: string;
      publishedAt?: string;
      createdBy?: {
        id?: number;
        documentId?: string;
      };
      updatedBy?: {
        id?: number;
        documentId?: string;
      };
      locale?: string;
      localizations?: {
        id?: number;
        documentId?: string;
      }[];
    };
    description?: string;
    startTime?: string;
    endTime?: string;
    startDate?: string;
    endDate?: string;
    slug?: string;
    type?: 'lodging' | 'adventure' | 'dining';
    squareImage?: {
      id?: number;
      documentId?: string;
      name?: string;
      alternativeText?: string;
      caption?: string;
      width?: number;
      height?: number;
      formats?: any;
      hash?: string;
      ext?: string;
      mime?: string;
      size?: number;
      url?: string;
      previewUrl?: string;
      provider?: string;
      provider_metadata?: any;
      related?: {
        id?: number;
        documentId?: string;
      }[];
      folder?: {
        id?: number;
        documentId?: string;
      };
      folderPath?: string;
      createdAt?: string;
      updatedAt?: string;
      publishedAt?: string;
      createdBy?: {
        id?: number;
        documentId?: string;
      };
      updatedBy?: {
        id?: number;
        documentId?: string;
      };
      locale?: string;
      localizations?: {
        id?: number;
        documentId?: string;
      }[];
    };
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  }[];
}

export type LocalAttractionsLocalAttractionCollection =
  StrapiCollectionResponse<LocalAttractionsLocalAttraction>;
export type LocalAttractionsLocalAttractionEntity =
  StrapiEntityResponse<LocalAttractionsLocalAttraction>;

export interface LocalAttractionsLocalAttractionResponse {
  data?: LocalAttractionsLocalAttraction;
  meta?: any;
}

export type LocalAttractionsLocalAttractionResponseCollection =
  StrapiCollectionResponse<LocalAttractionsLocalAttractionResponse>;
export type LocalAttractionsLocalAttractionResponseEntity =
  StrapiEntityResponse<LocalAttractionsLocalAttractionResponse>;

export interface MusicianRequest {
  data: {
    name?: string;
    website?: string;
    description?: string;
    image?: number | string;
    spotifyID?: string;
    musicVideoID?: string;
    setTime?: string;
    slug?: string;
    seoMeta?: PageComponentPageSeoComponent;
    squareImage?: number | string;
    order?: number;
    year?: number;
    locale?: string;
    localizations?: number | string[];
  };
}

export type MusicianRequestCollection =
  StrapiCollectionResponse<MusicianRequest>;
export type MusicianRequestEntity = StrapiEntityResponse<MusicianRequest>;

export interface MusicianListResponse {
  data?: Musician[];
  meta?: {
    pagination?: {
      page?: number;
      pageSize?: number;
      pageCount?: number;
      total?: number;
    };
  };
}

export type MusicianListResponseCollection =
  StrapiCollectionResponse<MusicianListResponse>;
export type MusicianListResponseEntity =
  StrapiEntityResponse<MusicianListResponse>;

export interface Musician {
  id?: number;
  documentId?: string;
  name?: string;
  website?: string;
  description?: string;
  image?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
      id?: number;
      documentId?: string;
    }[];
    folder?: {
      id?: number;
      documentId?: string;
      name?: string;
      pathId?: number;
      parent?: {
        id?: number;
        documentId?: string;
      };
      children?: {
        id?: number;
        documentId?: string;
      }[];
      files?: {
        id?: number;
        documentId?: string;
        name?: string;
        alternativeText?: string;
        caption?: string;
        width?: number;
        height?: number;
        formats?: any;
        hash?: string;
        ext?: string;
        mime?: string;
        size?: number;
        url?: string;
        previewUrl?: string;
        provider?: string;
        provider_metadata?: any;
        related?: {
          id?: number;
          documentId?: string;
        }[];
        folder?: {
          id?: number;
          documentId?: string;
        };
        folderPath?: string;
        createdAt?: string;
        updatedAt?: string;
        publishedAt?: string;
        createdBy?: {
          id?: number;
          documentId?: string;
          firstname?: string;
          lastname?: string;
          username?: string;
          email?: string;
          resetPasswordToken?: string;
          registrationToken?: string;
          isActive?: boolean;
          roles?: {
            id?: number;
            documentId?: string;
            name?: string;
            code?: string;
            description?: string;
            users?: {
              id?: number;
              documentId?: string;
            }[];
            permissions?: {
              id?: number;
              documentId?: string;
              action?: string;
              actionParameters?: any;
              subject?: string;
              properties?: any;
              conditions?: any;
              role?: {
                id?: number;
                documentId?: string;
              };
              createdAt?: string;
              updatedAt?: string;
              publishedAt?: string;
              createdBy?: {
                id?: number;
                documentId?: string;
              };
              updatedBy?: {
                id?: number;
                documentId?: string;
              };
              locale?: string;
              localizations?: {
                id?: number;
                documentId?: string;
              }[];
            }[];
            createdAt?: string;
            updatedAt?: string;
            publishedAt?: string;
            createdBy?: {
              id?: number;
              documentId?: string;
            };
            updatedBy?: {
              id?: number;
              documentId?: string;
            };
            locale?: string;
            localizations?: {
              id?: number;
              documentId?: string;
            }[];
          }[];
          blocked?: boolean;
          preferedLanguage?: string;
          createdAt?: string;
          updatedAt?: string;
          publishedAt?: string;
          createdBy?: {
            id?: number;
            documentId?: string;
          };
          updatedBy?: {
            id?: number;
            documentId?: string;
          };
          locale?: string;
          localizations?: {
            id?: number;
            documentId?: string;
          }[];
        };
        updatedBy?: {
          id?: number;
          documentId?: string;
        };
        locale?: string;
        localizations?: {
          id?: number;
          documentId?: string;
        }[];
      }[];
      path?: string;
      createdAt?: string;
      updatedAt?: string;
      publishedAt?: string;
      createdBy?: {
        id?: number;
        documentId?: string;
      };
      updatedBy?: {
        id?: number;
        documentId?: string;
      };
      locale?: string;
      localizations?: {
        id?: number;
        documentId?: string;
      }[];
    };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  };
  spotifyID?: string;
  musicVideoID?: string;
  setTime?: string;
  slug?: string;
  seoMeta?: PageComponentPageSeoComponent;
  squareImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
      id?: number;
      documentId?: string;
    }[];
    folder?: {
      id?: number;
      documentId?: string;
    };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  };
  order?: number;
  year?: number;
  createdAt?: string;
  updatedAt?: string;
  publishedAt?: string;
  createdBy?: {
    id?: number;
    documentId?: string;
  };
  updatedBy?: {
    id?: number;
    documentId?: string;
  };
  locale?: string;
  localizations?: {
    id?: number;
    documentId?: string;
    name?: string;
    website?: string;
    description?: string;
    image?: {
      id?: number;
      documentId?: string;
      name?: string;
      alternativeText?: string;
      caption?: string;
      width?: number;
      height?: number;
      formats?: any;
      hash?: string;
      ext?: string;
      mime?: string;
      size?: number;
      url?: string;
      previewUrl?: string;
      provider?: string;
      provider_metadata?: any;
      related?: {
        id?: number;
        documentId?: string;
      }[];
      folder?: {
        id?: number;
        documentId?: string;
      };
      folderPath?: string;
      createdAt?: string;
      updatedAt?: string;
      publishedAt?: string;
      createdBy?: {
        id?: number;
        documentId?: string;
      };
      updatedBy?: {
        id?: number;
        documentId?: string;
      };
      locale?: string;
      localizations?: {
        id?: number;
        documentId?: string;
      }[];
    };
    spotifyID?: string;
    musicVideoID?: string;
    setTime?: string;
    slug?: string;
    seoMeta?: PageComponentPageSeoComponent;
    squareImage?: {
      id?: number;
      documentId?: string;
      name?: string;
      alternativeText?: string;
      caption?: string;
      width?: number;
      height?: number;
      formats?: any;
      hash?: string;
      ext?: string;
      mime?: string;
      size?: number;
      url?: string;
      previewUrl?: string;
      provider?: string;
      provider_metadata?: any;
      related?: {
        id?: number;
        documentId?: string;
      }[];
      folder?: {
        id?: number;
        documentId?: string;
      };
      folderPath?: string;
      createdAt?: string;
      updatedAt?: string;
      publishedAt?: string;
      createdBy?: {
        id?: number;
        documentId?: string;
      };
      updatedBy?: {
        id?: number;
        documentId?: string;
      };
      locale?: string;
      localizations?: {
        id?: number;
        documentId?: string;
      }[];
    };
    order?: number;
    year?: number;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  }[];
}

export type MusicianCollection = StrapiCollectionResponse<Musician>;
export type MusicianEntity = StrapiEntityResponse<Musician>;

export interface MusicianResponse {
  data?: Musician;
  meta?: any;
}

export type MusicianResponseCollection =
  StrapiCollectionResponse<MusicianResponse>;
export type MusicianResponseEntity = StrapiEntityResponse<MusicianResponse>;

export interface ResourcesResourceRequest {
  data: {
    file?: number | string;
    name?: string;
    locale?: string;
    localizations?: number | string[];
  };
}

export type ResourcesResourceRequestCollection =
  StrapiCollectionResponse<ResourcesResourceRequest>;
export type ResourcesResourceRequestEntity =
  StrapiEntityResponse<ResourcesResourceRequest>;

export interface ResourcesResourceListResponse {
  data?: ResourcesResource[];
  meta?: {
    pagination?: {
      page?: number;
      pageSize?: number;
      pageCount?: number;
      total?: number;
    };
  };
}

export type ResourcesResourceListResponseCollection =
  StrapiCollectionResponse<ResourcesResourceListResponse>;
export type ResourcesResourceListResponseEntity =
  StrapiEntityResponse<ResourcesResourceListResponse>;

export interface ResourcesResource {
  id?: number;
  documentId?: string;
  file?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
      id?: number;
      documentId?: string;
    }[];
    folder?: {
      id?: number;
      documentId?: string;
      name?: string;
      pathId?: number;
      parent?: {
        id?: number;
        documentId?: string;
      };
      children?: {
        id?: number;
        documentId?: string;
      }[];
      files?: {
        id?: number;
        documentId?: string;
        name?: string;
        alternativeText?: string;
        caption?: string;
        width?: number;
        height?: number;
        formats?: any;
        hash?: string;
        ext?: string;
        mime?: string;
        size?: number;
        url?: string;
        previewUrl?: string;
        provider?: string;
        provider_metadata?: any;
        related?: {
          id?: number;
          documentId?: string;
        }[];
        folder?: {
          id?: number;
          documentId?: string;
        };
        folderPath?: string;
        createdAt?: string;
        updatedAt?: string;
        publishedAt?: string;
        createdBy?: {
          id?: number;
          documentId?: string;
          firstname?: string;
          lastname?: string;
          username?: string;
          email?: string;
          resetPasswordToken?: string;
          registrationToken?: string;
          isActive?: boolean;
          roles?: {
            id?: number;
            documentId?: string;
            name?: string;
            code?: string;
            description?: string;
            users?: {
              id?: number;
              documentId?: string;
            }[];
            permissions?: {
              id?: number;
              documentId?: string;
              action?: string;
              actionParameters?: any;
              subject?: string;
              properties?: any;
              conditions?: any;
              role?: {
                id?: number;
                documentId?: string;
              };
              createdAt?: string;
              updatedAt?: string;
              publishedAt?: string;
              createdBy?: {
                id?: number;
                documentId?: string;
              };
              updatedBy?: {
                id?: number;
                documentId?: string;
              };
              locale?: string;
              localizations?: {
                id?: number;
                documentId?: string;
              }[];
            }[];
            createdAt?: string;
            updatedAt?: string;
            publishedAt?: string;
            createdBy?: {
              id?: number;
              documentId?: string;
            };
            updatedBy?: {
              id?: number;
              documentId?: string;
            };
            locale?: string;
            localizations?: {
              id?: number;
              documentId?: string;
            }[];
          }[];
          blocked?: boolean;
          preferedLanguage?: string;
          createdAt?: string;
          updatedAt?: string;
          publishedAt?: string;
          createdBy?: {
            id?: number;
            documentId?: string;
          };
          updatedBy?: {
            id?: number;
            documentId?: string;
          };
          locale?: string;
          localizations?: {
            id?: number;
            documentId?: string;
          }[];
        };
        updatedBy?: {
          id?: number;
          documentId?: string;
        };
        locale?: string;
        localizations?: {
          id?: number;
          documentId?: string;
        }[];
      }[];
      path?: string;
      createdAt?: string;
      updatedAt?: string;
      publishedAt?: string;
      createdBy?: {
        id?: number;
        documentId?: string;
      };
      updatedBy?: {
        id?: number;
        documentId?: string;
      };
      locale?: string;
      localizations?: {
        id?: number;
        documentId?: string;
      }[];
    };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  };
  name?: string;
  createdAt?: string;
  updatedAt?: string;
  publishedAt?: string;
  createdBy?: {
    id?: number;
    documentId?: string;
  };
  updatedBy?: {
    id?: number;
    documentId?: string;
  };
  locale?: string;
  localizations?: {
    id?: number;
    documentId?: string;
    file?: {
      id?: number;
      documentId?: string;
      name?: string;
      alternativeText?: string;
      caption?: string;
      width?: number;
      height?: number;
      formats?: any;
      hash?: string;
      ext?: string;
      mime?: string;
      size?: number;
      url?: string;
      previewUrl?: string;
      provider?: string;
      provider_metadata?: any;
      related?: {
        id?: number;
        documentId?: string;
      }[];
      folder?: {
        id?: number;
        documentId?: string;
      };
      folderPath?: string;
      createdAt?: string;
      updatedAt?: string;
      publishedAt?: string;
      createdBy?: {
        id?: number;
        documentId?: string;
      };
      updatedBy?: {
        id?: number;
        documentId?: string;
      };
      locale?: string;
      localizations?: {
        id?: number;
        documentId?: string;
      }[];
    };
    name?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  }[];
}

export type ResourcesResourceCollection =
  StrapiCollectionResponse<ResourcesResource>;
export type ResourcesResourceEntity = StrapiEntityResponse<ResourcesResource>;

export interface ResourcesResourceResponse {
  data?: ResourcesResource;
  meta?: any;
}

export type ResourcesResourceResponseCollection =
  StrapiCollectionResponse<ResourcesResourceResponse>;
export type ResourcesResourceResponseEntity =
  StrapiEntityResponse<ResourcesResourceResponse>;

export interface SponsorsSponsorRequest {
  data: {
    name?: string;
    description?: string;
    priority?: number;
    email?: string;
    logo?: number | string;
    tagline?: string;
    website?: string;
    locale?: string;
    localizations?: number | string[];
  };
}

export type SponsorsSponsorRequestCollection =
  StrapiCollectionResponse<SponsorsSponsorRequest>;
export type SponsorsSponsorRequestEntity =
  StrapiEntityResponse<SponsorsSponsorRequest>;

export interface SponsorsSponsorListResponse {
  data?: SponsorsSponsor[];
  meta?: {
    pagination?: {
      page?: number;
      pageSize?: number;
      pageCount?: number;
      total?: number;
    };
  };
}

export type SponsorsSponsorListResponseCollection =
  StrapiCollectionResponse<SponsorsSponsorListResponse>;
export type SponsorsSponsorListResponseEntity =
  StrapiEntityResponse<SponsorsSponsorListResponse>;

export interface SponsorsSponsor {
  id?: number;
  documentId?: string;
  name?: string;
  description?: string;
  priority?: number;
  email?: string;
  logo?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
      id?: number;
      documentId?: string;
    }[];
    folder?: {
      id?: number;
      documentId?: string;
      name?: string;
      pathId?: number;
      parent?: {
        id?: number;
        documentId?: string;
      };
      children?: {
        id?: number;
        documentId?: string;
      }[];
      files?: {
        id?: number;
        documentId?: string;
        name?: string;
        alternativeText?: string;
        caption?: string;
        width?: number;
        height?: number;
        formats?: any;
        hash?: string;
        ext?: string;
        mime?: string;
        size?: number;
        url?: string;
        previewUrl?: string;
        provider?: string;
        provider_metadata?: any;
        related?: {
          id?: number;
          documentId?: string;
        }[];
        folder?: {
          id?: number;
          documentId?: string;
        };
        folderPath?: string;
        createdAt?: string;
        updatedAt?: string;
        publishedAt?: string;
        createdBy?: {
          id?: number;
          documentId?: string;
          firstname?: string;
          lastname?: string;
          username?: string;
          email?: string;
          resetPasswordToken?: string;
          registrationToken?: string;
          isActive?: boolean;
          roles?: {
            id?: number;
            documentId?: string;
            name?: string;
            code?: string;
            description?: string;
            users?: {
              id?: number;
              documentId?: string;
            }[];
            permissions?: {
              id?: number;
              documentId?: string;
              action?: string;
              actionParameters?: any;
              subject?: string;
              properties?: any;
              conditions?: any;
              role?: {
                id?: number;
                documentId?: string;
              };
              createdAt?: string;
              updatedAt?: string;
              publishedAt?: string;
              createdBy?: {
                id?: number;
                documentId?: string;
              };
              updatedBy?: {
                id?: number;
                documentId?: string;
              };
              locale?: string;
              localizations?: {
                id?: number;
                documentId?: string;
              }[];
            }[];
            createdAt?: string;
            updatedAt?: string;
            publishedAt?: string;
            createdBy?: {
              id?: number;
              documentId?: string;
            };
            updatedBy?: {
              id?: number;
              documentId?: string;
            };
            locale?: string;
            localizations?: {
              id?: number;
              documentId?: string;
            }[];
          }[];
          blocked?: boolean;
          preferedLanguage?: string;
          createdAt?: string;
          updatedAt?: string;
          publishedAt?: string;
          createdBy?: {
            id?: number;
            documentId?: string;
          };
          updatedBy?: {
            id?: number;
            documentId?: string;
          };
          locale?: string;
          localizations?: {
            id?: number;
            documentId?: string;
          }[];
        };
        updatedBy?: {
          id?: number;
          documentId?: string;
        };
        locale?: string;
        localizations?: {
          id?: number;
          documentId?: string;
        }[];
      }[];
      path?: string;
      createdAt?: string;
      updatedAt?: string;
      publishedAt?: string;
      createdBy?: {
        id?: number;
        documentId?: string;
      };
      updatedBy?: {
        id?: number;
        documentId?: string;
      };
      locale?: string;
      localizations?: {
        id?: number;
        documentId?: string;
      }[];
    };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  };
  tagline?: string;
  website?: string;
  createdAt?: string;
  updatedAt?: string;
  publishedAt?: string;
  createdBy?: {
    id?: number;
    documentId?: string;
  };
  updatedBy?: {
    id?: number;
    documentId?: string;
  };
  locale?: string;
  localizations?: {
    id?: number;
    documentId?: string;
    name?: string;
    description?: string;
    priority?: number;
    email?: string;
    logo?: {
      id?: number;
      documentId?: string;
      name?: string;
      alternativeText?: string;
      caption?: string;
      width?: number;
      height?: number;
      formats?: any;
      hash?: string;
      ext?: string;
      mime?: string;
      size?: number;
      url?: string;
      previewUrl?: string;
      provider?: string;
      provider_metadata?: any;
      related?: {
        id?: number;
        documentId?: string;
      }[];
      folder?: {
        id?: number;
        documentId?: string;
      };
      folderPath?: string;
      createdAt?: string;
      updatedAt?: string;
      publishedAt?: string;
      createdBy?: {
        id?: number;
        documentId?: string;
      };
      updatedBy?: {
        id?: number;
        documentId?: string;
      };
      locale?: string;
      localizations?: {
        id?: number;
        documentId?: string;
      }[];
    };
    tagline?: string;
    website?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  }[];
}

export type SponsorsSponsorCollection =
  StrapiCollectionResponse<SponsorsSponsor>;
export type SponsorsSponsorEntity = StrapiEntityResponse<SponsorsSponsor>;

export interface SponsorsSponsorResponse {
  data?: SponsorsSponsor;
  meta?: any;
}

export type SponsorsSponsorResponseCollection =
  StrapiCollectionResponse<SponsorsSponsorResponse>;
export type SponsorsSponsorResponseEntity =
  StrapiEntityResponse<SponsorsSponsorResponse>;

export interface TagRequest {
  data: {
    name?: string;
    slug?: string;
    blogs?: number | string[];
    locale?: string;
    localizations?: number | string[];
  };
}

export type TagRequestCollection = StrapiCollectionResponse<TagRequest>;
export type TagRequestEntity = StrapiEntityResponse<TagRequest>;

export interface TagListResponse {
  data?: Tag[];
  meta?: {
    pagination?: {
      page?: number;
      pageSize?: number;
      pageCount?: number;
      total?: number;
    };
  };
}

export type TagListResponseCollection =
  StrapiCollectionResponse<TagListResponse>;
export type TagListResponseEntity = StrapiEntityResponse<TagListResponse>;

export interface Tag {
  id?: number;
  documentId?: string;
  name?: string;
  slug?: string;
  blogs?: {
    id?: number;
    documentId?: string;
    title?: string;
    author?: string;
    description?: string;
    heroImage?: BlogComponentMediaImageWithMetaComponent;
    bodyContent?: any[];
    featuredPost?: boolean;
    tags?: {
      id?: number;
      documentId?: string;
      name?: string;
      slug?: string;
      blogs?: {
        id?: number;
        documentId?: string;
      }[];
      createdAt?: string;
      updatedAt?: string;
      publishedAt?: string;
      createdBy?: {
        id?: number;
        documentId?: string;
      };
      updatedBy?: {
        id?: number;
        documentId?: string;
      };
      locale?: string;
      localizations?: {
        id?: number;
        documentId?: string;
      }[];
    }[];
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  }[];
  createdAt?: string;
  updatedAt?: string;
  publishedAt?: string;
  createdBy?: {
    id?: number;
    documentId?: string;
  };
  updatedBy?: {
    id?: number;
    documentId?: string;
  };
  locale?: string;
  localizations?: {
    id?: number;
    documentId?: string;
  }[];
}

export type TagCollection = StrapiCollectionResponse<Tag>;
export type TagEntity = StrapiEntityResponse<Tag>;

export interface TagResponse {
  data?: Tag;
  meta?: any;
}

export type TagResponseCollection = StrapiCollectionResponse<TagResponse>;
export type TagResponseEntity = StrapiEntityResponse<TagResponse>;

export interface ThankYouRequest {
  data: {
    marqueeImage?: number | string;
    title?: string;
    message?: string;
    seoMeta?: PageComponentPageSeoComponent;
    panelImage?: number | string;
    locale?: string;
    localizations?: number | string[];
  };
}

export type ThankYouRequestCollection =
  StrapiCollectionResponse<ThankYouRequest>;
export type ThankYouRequestEntity = StrapiEntityResponse<ThankYouRequest>;

export interface ThankYouListResponse {
  data?: ThankYou[];
  meta?: {
    pagination?: {
      page?: number;
      pageSize?: number;
      pageCount?: number;
      total?: number;
    };
  };
}

export type ThankYouListResponseCollection =
  StrapiCollectionResponse<ThankYouListResponse>;
export type ThankYouListResponseEntity =
  StrapiEntityResponse<ThankYouListResponse>;

export interface ThankYou {
  id?: number;
  documentId?: string;
  marqueeImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
      id?: number;
      documentId?: string;
    }[];
    folder?: {
      id?: number;
      documentId?: string;
      name?: string;
      pathId?: number;
      parent?: {
        id?: number;
        documentId?: string;
      };
      children?: {
        id?: number;
        documentId?: string;
      }[];
      files?: {
        id?: number;
        documentId?: string;
        name?: string;
        alternativeText?: string;
        caption?: string;
        width?: number;
        height?: number;
        formats?: any;
        hash?: string;
        ext?: string;
        mime?: string;
        size?: number;
        url?: string;
        previewUrl?: string;
        provider?: string;
        provider_metadata?: any;
        related?: {
          id?: number;
          documentId?: string;
        }[];
        folder?: {
          id?: number;
          documentId?: string;
        };
        folderPath?: string;
        createdAt?: string;
        updatedAt?: string;
        publishedAt?: string;
        createdBy?: {
          id?: number;
          documentId?: string;
          firstname?: string;
          lastname?: string;
          username?: string;
          email?: string;
          resetPasswordToken?: string;
          registrationToken?: string;
          isActive?: boolean;
          roles?: {
            id?: number;
            documentId?: string;
            name?: string;
            code?: string;
            description?: string;
            users?: {
              id?: number;
              documentId?: string;
            }[];
            permissions?: {
              id?: number;
              documentId?: string;
              action?: string;
              actionParameters?: any;
              subject?: string;
              properties?: any;
              conditions?: any;
              role?: {
                id?: number;
                documentId?: string;
              };
              createdAt?: string;
              updatedAt?: string;
              publishedAt?: string;
              createdBy?: {
                id?: number;
                documentId?: string;
              };
              updatedBy?: {
                id?: number;
                documentId?: string;
              };
              locale?: string;
              localizations?: {
                id?: number;
                documentId?: string;
              }[];
            }[];
            createdAt?: string;
            updatedAt?: string;
            publishedAt?: string;
            createdBy?: {
              id?: number;
              documentId?: string;
            };
            updatedBy?: {
              id?: number;
              documentId?: string;
            };
            locale?: string;
            localizations?: {
              id?: number;
              documentId?: string;
            }[];
          }[];
          blocked?: boolean;
          preferedLanguage?: string;
          createdAt?: string;
          updatedAt?: string;
          publishedAt?: string;
          createdBy?: {
            id?: number;
            documentId?: string;
          };
          updatedBy?: {
            id?: number;
            documentId?: string;
          };
          locale?: string;
          localizations?: {
            id?: number;
            documentId?: string;
          }[];
        };
        updatedBy?: {
          id?: number;
          documentId?: string;
        };
        locale?: string;
        localizations?: {
          id?: number;
          documentId?: string;
        }[];
      }[];
      path?: string;
      createdAt?: string;
      updatedAt?: string;
      publishedAt?: string;
      createdBy?: {
        id?: number;
        documentId?: string;
      };
      updatedBy?: {
        id?: number;
        documentId?: string;
      };
      locale?: string;
      localizations?: {
        id?: number;
        documentId?: string;
      }[];
    };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  };
  title?: string;
  message?: string;
  seoMeta?: PageComponentPageSeoComponent;
  panelImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
      id?: number;
      documentId?: string;
    }[];
    folder?: {
      id?: number;
      documentId?: string;
    };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  };
  createdAt?: string;
  updatedAt?: string;
  publishedAt?: string;
  createdBy?: {
    id?: number;
    documentId?: string;
  };
  updatedBy?: {
    id?: number;
    documentId?: string;
  };
  locale?: string;
  localizations?: {
    id?: number;
    documentId?: string;
    marqueeImage?: {
      id?: number;
      documentId?: string;
      name?: string;
      alternativeText?: string;
      caption?: string;
      width?: number;
      height?: number;
      formats?: any;
      hash?: string;
      ext?: string;
      mime?: string;
      size?: number;
      url?: string;
      previewUrl?: string;
      provider?: string;
      provider_metadata?: any;
      related?: {
        id?: number;
        documentId?: string;
      }[];
      folder?: {
        id?: number;
        documentId?: string;
      };
      folderPath?: string;
      createdAt?: string;
      updatedAt?: string;
      publishedAt?: string;
      createdBy?: {
        id?: number;
        documentId?: string;
      };
      updatedBy?: {
        id?: number;
        documentId?: string;
      };
      locale?: string;
      localizations?: {
        id?: number;
        documentId?: string;
      }[];
    };
    title?: string;
    message?: string;
    seoMeta?: PageComponentPageSeoComponent;
    panelImage?: {
      id?: number;
      documentId?: string;
      name?: string;
      alternativeText?: string;
      caption?: string;
      width?: number;
      height?: number;
      formats?: any;
      hash?: string;
      ext?: string;
      mime?: string;
      size?: number;
      url?: string;
      previewUrl?: string;
      provider?: string;
      provider_metadata?: any;
      related?: {
        id?: number;
        documentId?: string;
      }[];
      folder?: {
        id?: number;
        documentId?: string;
      };
      folderPath?: string;
      createdAt?: string;
      updatedAt?: string;
      publishedAt?: string;
      createdBy?: {
        id?: number;
        documentId?: string;
      };
      updatedBy?: {
        id?: number;
        documentId?: string;
      };
      locale?: string;
      localizations?: {
        id?: number;
        documentId?: string;
      }[];
    };
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  }[];
}

export type ThankYouCollection = StrapiCollectionResponse<ThankYou>;
export type ThankYouEntity = StrapiEntityResponse<ThankYou>;

export interface ThankYouResponse {
  data?: ThankYou;
  meta?: any;
}

export type ThankYouResponseCollection =
  StrapiCollectionResponse<ThankYouResponse>;
export type ThankYouResponseEntity = StrapiEntityResponse<ThankYouResponse>;

export interface TicketHolderRequest {
  data: {
    name?: string;
    numberOfTickets?: number;
    email?: string;
    phoneNumber?: string;
    customerID?: string;
    transactionID?: string;
    timeOfPurchase?: string;
    cookOffYear?: number;
    firstName?: string;
    lastName?: string;
    recipientFirstName?: string;
    recipientLastName?: string;
    locale?: string;
    localizations?: number | string[];
  };
}

export type TicketHolderRequestCollection =
  StrapiCollectionResponse<TicketHolderRequest>;
export type TicketHolderRequestEntity =
  StrapiEntityResponse<TicketHolderRequest>;

export interface TicketHolderListResponse {
  data?: TicketHolder[];
  meta?: {
    pagination?: {
      page?: number;
      pageSize?: number;
      pageCount?: number;
      total?: number;
    };
  };
}

export type TicketHolderListResponseCollection =
  StrapiCollectionResponse<TicketHolderListResponse>;
export type TicketHolderListResponseEntity =
  StrapiEntityResponse<TicketHolderListResponse>;

export interface TicketHolder {
  id?: number;
  documentId?: string;
  name?: string;
  numberOfTickets?: number;
  email?: string;
  phoneNumber?: string;
  customerID?: string;
  transactionID?: string;
  timeOfPurchase?: string;
  cookOffYear?: number;
  firstName?: string;
  lastName?: string;
  recipientFirstName?: string;
  recipientLastName?: string;
  createdAt?: string;
  updatedAt?: string;
  publishedAt?: string;
  createdBy?: {
    id?: number;
    documentId?: string;
    firstname?: string;
    lastname?: string;
    username?: string;
    email?: string;
    resetPasswordToken?: string;
    registrationToken?: string;
    isActive?: boolean;
    roles?: {
      id?: number;
      documentId?: string;
      name?: string;
      code?: string;
      description?: string;
      users?: {
        id?: number;
        documentId?: string;
      }[];
      permissions?: {
        id?: number;
        documentId?: string;
        action?: string;
        actionParameters?: any;
        subject?: string;
        properties?: any;
        conditions?: any;
        role?: {
          id?: number;
          documentId?: string;
        };
        createdAt?: string;
        updatedAt?: string;
        publishedAt?: string;
        createdBy?: {
          id?: number;
          documentId?: string;
        };
        updatedBy?: {
          id?: number;
          documentId?: string;
        };
        locale?: string;
        localizations?: {
          id?: number;
          documentId?: string;
        }[];
      }[];
      createdAt?: string;
      updatedAt?: string;
      publishedAt?: string;
      createdBy?: {
        id?: number;
        documentId?: string;
      };
      updatedBy?: {
        id?: number;
        documentId?: string;
      };
      locale?: string;
      localizations?: {
        id?: number;
        documentId?: string;
      }[];
    }[];
    blocked?: boolean;
    preferedLanguage?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  };
  updatedBy?: {
    id?: number;
    documentId?: string;
  };
  locale?: string;
  localizations?: {
    id?: number;
    documentId?: string;
    name?: string;
    numberOfTickets?: number;
    email?: string;
    phoneNumber?: string;
    customerID?: string;
    transactionID?: string;
    timeOfPurchase?: string;
    cookOffYear?: number;
    firstName?: string;
    lastName?: string;
    recipientFirstName?: string;
    recipientLastName?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  }[];
}

export type TicketHolderCollection = StrapiCollectionResponse<TicketHolder>;
export type TicketHolderEntity = StrapiEntityResponse<TicketHolder>;

export interface TicketHolderResponse {
  data?: TicketHolder;
  meta?: any;
}

export type TicketHolderResponseCollection =
  StrapiCollectionResponse<TicketHolderResponse>;
export type TicketHolderResponseEntity =
  StrapiEntityResponse<TicketHolderResponse>;

export interface TicketsTicketRequest {
  data: {
    title?: string;
    marqueeImage?: number | string;
    panelImage?: number | string;
    seoMeta?: PageComponentPageSeoComponent;
    locale?: string;
    localizations?: number | string[];
  };
}

export type TicketsTicketRequestCollection =
  StrapiCollectionResponse<TicketsTicketRequest>;
export type TicketsTicketRequestEntity =
  StrapiEntityResponse<TicketsTicketRequest>;

export interface TicketsTicketListResponse {
  data?: TicketsTicket[];
  meta?: {
    pagination?: {
      page?: number;
      pageSize?: number;
      pageCount?: number;
      total?: number;
    };
  };
}

export type TicketsTicketListResponseCollection =
  StrapiCollectionResponse<TicketsTicketListResponse>;
export type TicketsTicketListResponseEntity =
  StrapiEntityResponse<TicketsTicketListResponse>;

export interface TicketsTicket {
  id?: number;
  documentId?: string;
  title?: string;
  marqueeImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
      id?: number;
      documentId?: string;
    }[];
    folder?: {
      id?: number;
      documentId?: string;
      name?: string;
      pathId?: number;
      parent?: {
        id?: number;
        documentId?: string;
      };
      children?: {
        id?: number;
        documentId?: string;
      }[];
      files?: {
        id?: number;
        documentId?: string;
        name?: string;
        alternativeText?: string;
        caption?: string;
        width?: number;
        height?: number;
        formats?: any;
        hash?: string;
        ext?: string;
        mime?: string;
        size?: number;
        url?: string;
        previewUrl?: string;
        provider?: string;
        provider_metadata?: any;
        related?: {
          id?: number;
          documentId?: string;
        }[];
        folder?: {
          id?: number;
          documentId?: string;
        };
        folderPath?: string;
        createdAt?: string;
        updatedAt?: string;
        publishedAt?: string;
        createdBy?: {
          id?: number;
          documentId?: string;
          firstname?: string;
          lastname?: string;
          username?: string;
          email?: string;
          resetPasswordToken?: string;
          registrationToken?: string;
          isActive?: boolean;
          roles?: {
            id?: number;
            documentId?: string;
            name?: string;
            code?: string;
            description?: string;
            users?: {
              id?: number;
              documentId?: string;
            }[];
            permissions?: {
              id?: number;
              documentId?: string;
              action?: string;
              actionParameters?: any;
              subject?: string;
              properties?: any;
              conditions?: any;
              role?: {
                id?: number;
                documentId?: string;
              };
              createdAt?: string;
              updatedAt?: string;
              publishedAt?: string;
              createdBy?: {
                id?: number;
                documentId?: string;
              };
              updatedBy?: {
                id?: number;
                documentId?: string;
              };
              locale?: string;
              localizations?: {
                id?: number;
                documentId?: string;
              }[];
            }[];
            createdAt?: string;
            updatedAt?: string;
            publishedAt?: string;
            createdBy?: {
              id?: number;
              documentId?: string;
            };
            updatedBy?: {
              id?: number;
              documentId?: string;
            };
            locale?: string;
            localizations?: {
              id?: number;
              documentId?: string;
            }[];
          }[];
          blocked?: boolean;
          preferedLanguage?: string;
          createdAt?: string;
          updatedAt?: string;
          publishedAt?: string;
          createdBy?: {
            id?: number;
            documentId?: string;
          };
          updatedBy?: {
            id?: number;
            documentId?: string;
          };
          locale?: string;
          localizations?: {
            id?: number;
            documentId?: string;
          }[];
        };
        updatedBy?: {
          id?: number;
          documentId?: string;
        };
        locale?: string;
        localizations?: {
          id?: number;
          documentId?: string;
        }[];
      }[];
      path?: string;
      createdAt?: string;
      updatedAt?: string;
      publishedAt?: string;
      createdBy?: {
        id?: number;
        documentId?: string;
      };
      updatedBy?: {
        id?: number;
        documentId?: string;
      };
      locale?: string;
      localizations?: {
        id?: number;
        documentId?: string;
      }[];
    };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  };
  panelImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
      id?: number;
      documentId?: string;
    }[];
    folder?: {
      id?: number;
      documentId?: string;
    };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  };
  seoMeta?: PageComponentPageSeoComponent;
  createdAt?: string;
  updatedAt?: string;
  publishedAt?: string;
  createdBy?: {
    id?: number;
    documentId?: string;
  };
  updatedBy?: {
    id?: number;
    documentId?: string;
  };
  locale?: string;
  localizations?: {
    id?: number;
    documentId?: string;
    title?: string;
    marqueeImage?: {
      id?: number;
      documentId?: string;
      name?: string;
      alternativeText?: string;
      caption?: string;
      width?: number;
      height?: number;
      formats?: any;
      hash?: string;
      ext?: string;
      mime?: string;
      size?: number;
      url?: string;
      previewUrl?: string;
      provider?: string;
      provider_metadata?: any;
      related?: {
        id?: number;
        documentId?: string;
      }[];
      folder?: {
        id?: number;
        documentId?: string;
      };
      folderPath?: string;
      createdAt?: string;
      updatedAt?: string;
      publishedAt?: string;
      createdBy?: {
        id?: number;
        documentId?: string;
      };
      updatedBy?: {
        id?: number;
        documentId?: string;
      };
      locale?: string;
      localizations?: {
        id?: number;
        documentId?: string;
      }[];
    };
    panelImage?: {
      id?: number;
      documentId?: string;
      name?: string;
      alternativeText?: string;
      caption?: string;
      width?: number;
      height?: number;
      formats?: any;
      hash?: string;
      ext?: string;
      mime?: string;
      size?: number;
      url?: string;
      previewUrl?: string;
      provider?: string;
      provider_metadata?: any;
      related?: {
        id?: number;
        documentId?: string;
      }[];
      folder?: {
        id?: number;
        documentId?: string;
      };
      folderPath?: string;
      createdAt?: string;
      updatedAt?: string;
      publishedAt?: string;
      createdBy?: {
        id?: number;
        documentId?: string;
      };
      updatedBy?: {
        id?: number;
        documentId?: string;
      };
      locale?: string;
      localizations?: {
        id?: number;
        documentId?: string;
      }[];
    };
    seoMeta?: PageComponentPageSeoComponent;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  }[];
}

export type TicketsTicketCollection = StrapiCollectionResponse<TicketsTicket>;
export type TicketsTicketEntity = StrapiEntityResponse<TicketsTicket>;

export interface TicketsTicketResponse {
  data?: TicketsTicket;
  meta?: any;
}

export type TicketsTicketResponseCollection =
  StrapiCollectionResponse<TicketsTicketResponse>;
export type TicketsTicketResponseEntity =
  StrapiEntityResponse<TicketsTicketResponse>;

export interface WinnersWinnerRequest {
  data: {
    name?: string;
    description?: string;
    image?: number | string;
    rank?: number;
    year?: number;
    competition?:
      | 'saturdaychili'
      | 'openshow'
      | 'limitedshow'
      | 'beans'
      | 'lastchancechili'
      | 'margaritas'
      | 'salsa'
      | 'ribs'
      | 'chicken';
    locale?: string;
    localizations?: number | string[];
  };
}

export type WinnersWinnerRequestCollection =
  StrapiCollectionResponse<WinnersWinnerRequest>;
export type WinnersWinnerRequestEntity =
  StrapiEntityResponse<WinnersWinnerRequest>;

export interface WinnersWinnerListResponse {
  data?: WinnersWinner[];
  meta?: {
    pagination?: {
      page?: number;
      pageSize?: number;
      pageCount?: number;
      total?: number;
    };
  };
}

export type WinnersWinnerListResponseCollection =
  StrapiCollectionResponse<WinnersWinnerListResponse>;
export type WinnersWinnerListResponseEntity =
  StrapiEntityResponse<WinnersWinnerListResponse>;

export interface WinnersWinner {
  id?: number;
  documentId?: string;
  name?: string;
  description?: string;
  image?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
      id?: number;
      documentId?: string;
    }[];
    folder?: {
      id?: number;
      documentId?: string;
      name?: string;
      pathId?: number;
      parent?: {
        id?: number;
        documentId?: string;
      };
      children?: {
        id?: number;
        documentId?: string;
      }[];
      files?: {
        id?: number;
        documentId?: string;
        name?: string;
        alternativeText?: string;
        caption?: string;
        width?: number;
        height?: number;
        formats?: any;
        hash?: string;
        ext?: string;
        mime?: string;
        size?: number;
        url?: string;
        previewUrl?: string;
        provider?: string;
        provider_metadata?: any;
        related?: {
          id?: number;
          documentId?: string;
        }[];
        folder?: {
          id?: number;
          documentId?: string;
        };
        folderPath?: string;
        createdAt?: string;
        updatedAt?: string;
        publishedAt?: string;
        createdBy?: {
          id?: number;
          documentId?: string;
          firstname?: string;
          lastname?: string;
          username?: string;
          email?: string;
          resetPasswordToken?: string;
          registrationToken?: string;
          isActive?: boolean;
          roles?: {
            id?: number;
            documentId?: string;
            name?: string;
            code?: string;
            description?: string;
            users?: {
              id?: number;
              documentId?: string;
            }[];
            permissions?: {
              id?: number;
              documentId?: string;
              action?: string;
              actionParameters?: any;
              subject?: string;
              properties?: any;
              conditions?: any;
              role?: {
                id?: number;
                documentId?: string;
              };
              createdAt?: string;
              updatedAt?: string;
              publishedAt?: string;
              createdBy?: {
                id?: number;
                documentId?: string;
              };
              updatedBy?: {
                id?: number;
                documentId?: string;
              };
              locale?: string;
              localizations?: {
                id?: number;
                documentId?: string;
              }[];
            }[];
            createdAt?: string;
            updatedAt?: string;
            publishedAt?: string;
            createdBy?: {
              id?: number;
              documentId?: string;
            };
            updatedBy?: {
              id?: number;
              documentId?: string;
            };
            locale?: string;
            localizations?: {
              id?: number;
              documentId?: string;
            }[];
          }[];
          blocked?: boolean;
          preferedLanguage?: string;
          createdAt?: string;
          updatedAt?: string;
          publishedAt?: string;
          createdBy?: {
            id?: number;
            documentId?: string;
          };
          updatedBy?: {
            id?: number;
            documentId?: string;
          };
          locale?: string;
          localizations?: {
            id?: number;
            documentId?: string;
          }[];
        };
        updatedBy?: {
          id?: number;
          documentId?: string;
        };
        locale?: string;
        localizations?: {
          id?: number;
          documentId?: string;
        }[];
      }[];
      path?: string;
      createdAt?: string;
      updatedAt?: string;
      publishedAt?: string;
      createdBy?: {
        id?: number;
        documentId?: string;
      };
      updatedBy?: {
        id?: number;
        documentId?: string;
      };
      locale?: string;
      localizations?: {
        id?: number;
        documentId?: string;
      }[];
    };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  };
  rank?: number;
  year?: number;
  competition?:
    | 'saturdaychili'
    | 'openshow'
    | 'limitedshow'
    | 'beans'
    | 'lastchancechili'
    | 'margaritas'
    | 'salsa'
    | 'ribs'
    | 'chicken';
  createdAt?: string;
  updatedAt?: string;
  publishedAt?: string;
  createdBy?: {
    id?: number;
    documentId?: string;
  };
  updatedBy?: {
    id?: number;
    documentId?: string;
  };
  locale?: string;
  localizations?: {
    id?: number;
    documentId?: string;
    name?: string;
    description?: string;
    image?: {
      id?: number;
      documentId?: string;
      name?: string;
      alternativeText?: string;
      caption?: string;
      width?: number;
      height?: number;
      formats?: any;
      hash?: string;
      ext?: string;
      mime?: string;
      size?: number;
      url?: string;
      previewUrl?: string;
      provider?: string;
      provider_metadata?: any;
      related?: {
        id?: number;
        documentId?: string;
      }[];
      folder?: {
        id?: number;
        documentId?: string;
      };
      folderPath?: string;
      createdAt?: string;
      updatedAt?: string;
      publishedAt?: string;
      createdBy?: {
        id?: number;
        documentId?: string;
      };
      updatedBy?: {
        id?: number;
        documentId?: string;
      };
      locale?: string;
      localizations?: {
        id?: number;
        documentId?: string;
      }[];
    };
    rank?: number;
    year?: number;
    competition?:
      | 'saturdaychili'
      | 'openshow'
      | 'limitedshow'
      | 'beans'
      | 'lastchancechili'
      | 'margaritas'
      | 'salsa'
      | 'ribs'
      | 'chicken';
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
      id?: number;
      documentId?: string;
    };
    updatedBy?: {
      id?: number;
      documentId?: string;
    };
    locale?: string;
    localizations?: {
      id?: number;
      documentId?: string;
    }[];
  }[];
}

export type WinnersWinnerCollection = StrapiCollectionResponse<WinnersWinner>;
export type WinnersWinnerEntity = StrapiEntityResponse<WinnersWinner>;

export interface WinnersWinnerResponse {
  data?: WinnersWinner;
  meta?: any;
}

export type WinnersWinnerResponseCollection =
  StrapiCollectionResponse<WinnersWinnerResponse>;
export type WinnersWinnerResponseEntity =
  StrapiEntityResponse<WinnersWinnerResponse>;

export interface UploadFile {
  id?: number;
  name?: string;
  alternativeText?: string;
  caption?: string;
  width?: number;
  height?: number;
  formats?: number;
  hash?: string;
  ext?: string;
  mime?: string;
  size?: number;
  url?: string;
  previewUrl?: string;
  provider?: string;
  provider_metadata?: any;
  createdAt?: string;
  updatedAt?: string;
}

export type UploadFileCollection = StrapiCollectionResponse<UploadFile>;
export type UploadFileEntity = StrapiEntityResponse<UploadFile>;

export interface UsersPermissionsRole {
  id?: number;
  name?: string;
  description?: string;
  type?: string;
  createdAt?: string;
  updatedAt?: string;
}

export type UsersPermissionsRoleCollection =
  StrapiCollectionResponse<UsersPermissionsRole>;
export type UsersPermissionsRoleEntity =
  StrapiEntityResponse<UsersPermissionsRole>;

export interface UsersPermissionsUser {
  id?: number;
  username?: string;
  email?: string;
  provider?: string;
  confirmed?: boolean;
  blocked?: boolean;
  createdAt?: string;
  updatedAt?: string;
}

export type UsersPermissionsUserCollection =
  StrapiCollectionResponse<UsersPermissionsUser>;
export type UsersPermissionsUserEntity =
  StrapiEntityResponse<UsersPermissionsUser>;

export interface UsersPermissionsUserRegistration {
  jwt?: string;
  user?: UsersPermissionsUser;
}

export type UsersPermissionsUserRegistrationCollection =
  StrapiCollectionResponse<UsersPermissionsUserRegistration>;
export type UsersPermissionsUserRegistrationEntity =
  StrapiEntityResponse<UsersPermissionsUserRegistration>;

export interface UsersPermissionsPermissionsTree {}

export type UsersPermissionsPermissionsTreeCollection =
  StrapiCollectionResponse<UsersPermissionsPermissionsTree>;
export type UsersPermissionsPermissionsTreeEntity =
  StrapiEntityResponse<UsersPermissionsPermissionsTree>;
