// Generated Types from Strapi API Documentation
// DO NOT EDIT THIS FILE MANUALLY

import type { StrapiResponse } from 'strapi-sdk-js';

type Nullable<T> = T | null;

// Utility type for Strapi media fields
export interface StrapiMedia {
  data: {
    id: number;
    attributes: {
      name: string;
      alternativeText: string | null;
      caption: string | null;
      width: number;
      height: number;
      formats: {
        thumbnail?: {
          url: string;
          width: number;
          height: number;
        };
        small?: {
          url: string;
          width: number;
          height: number;
        };
        medium?: {
          url: string;
          width: number;
          height: number;
        };
        large?: {
          url: string;
          width: number;
          height: number;
        };
      };
      hash: string;
      ext: string;
      mime: string;
      size: number;
      url: string;
      previewUrl: string | null;
      provider: string;
      createdAt: string;
      updatedAt: string;
    };
  } | null;
}

// Utility type for Strapi collection responses
export type StrapiCollection<T> = StrapiResponse<{
  data: Array<T & {
    id: number;
    documentId: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    locale?: string;
  }>;
  meta: {
    pagination: {
      page: number;
      pageSize: number;
      pageCount: number;
      total: number;
    };
  };
}>;

// Utility type for Strapi single responses
export type StrapiEntity<T> = {
  data: T & {
    id: number;
    documentId: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    locale?: string;
  };
  meta: Record<string, unknown>;
};

export interface AboutPageRequest {
  data: {
    title?: string;
    marqueeImage?: number | string;
    quoteContent?: PageComponentQuoteComponent;
    pageContent?: PageComponentTextDisplayComponent;
    meta?: PageComponentPageSeoComponent;
    locale?: string;
    localizations?: number | string[];
  };
}

export type AboutPageRequestCollection = StrapiCollection<AboutPageRequest>;
export type AboutPageRequestEntity = StrapiEntity<AboutPageRequest>;

export interface AboutPage {
  id?: number;
  documentId?: string;
  title?: string;
  marqueeImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
    name?: string;
    pathId?: number;
    parent?: {
    id?: number;
    documentId?: string;
  };
    children?: {
    id?: number;
    documentId?: string;
  }[];
    files?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
    firstname?: string;
    lastname?: string;
    username?: string;
    email?: string;
    resetPasswordToken?: string;
    registrationToken?: string;
    isActive?: boolean;
    roles?: {
    id?: number;
    documentId?: string;
    name?: string;
    code?: string;
    description?: string;
    users?: {
    id?: number;
    documentId?: string;
  }[];
    permissions?: {
    id?: number;
    documentId?: string;
    action?: string;
    actionParameters?: any;
    subject?: string;
    properties?: any;
    conditions?: any;
    role?: {
    id?: number;
    documentId?: string;
  };
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    blocked?: boolean;
    preferedLanguage?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    path?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
  quoteContent?: PageComponentQuoteComponent;
  pageContent?: PageComponentTextDisplayComponent;
  meta?: PageComponentPageSeoComponent;
  createdAt?: string;
  updatedAt?: string;
  publishedAt?: string;
  createdBy?: {
    id?: number;
    documentId?: string;
  };
  updatedBy?: {
    id?: number;
    documentId?: string;
  };
  locale?: string;
  localizations?: {
    id?: number;
    documentId?: string;
    title?: string;
    marqueeImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    quoteContent?: PageComponentQuoteComponent;
    pageContent?: PageComponentTextDisplayComponent;
    meta?: PageComponentPageSeoComponent;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
}

export type AboutPageCollection = StrapiCollection<AboutPage>;
export type AboutPageEntity = StrapiEntity<AboutPage>;

export interface AboutPageResponse {
  data?: AboutPage;
  meta?: any;
}

export type AboutPageResponseCollection = StrapiCollection<AboutPageResponse>;
export type AboutPageResponseEntity = StrapiEntity<AboutPageResponse>;

export interface PageComponentQuoteComponent {
  id?: number;
  author?: string;
  text?: string;
}

export type PageComponentQuoteComponentCollection = StrapiCollection<PageComponentQuoteComponent>;
export type PageComponentQuoteComponentEntity = StrapiEntity<PageComponentQuoteComponent>;

export interface UtilityComponentLinkComponent {
  id?: number;
  label?: string;
  url?: string;
  type?: 'internal' | 'external';
}

export type UtilityComponentLinkComponentCollection = StrapiCollection<UtilityComponentLinkComponent>;
export type UtilityComponentLinkComponentEntity = StrapiEntity<UtilityComponentLinkComponent>;

export interface PageComponentTextDisplayComponent {
  id?: number;
  author?: string;
  postDate?: string;
  primaryText?: string;
  Links?: UtilityComponentLinkComponent[];
}

export type PageComponentTextDisplayComponentCollection = StrapiCollection<PageComponentTextDisplayComponent>;
export type PageComponentTextDisplayComponentEntity = StrapiEntity<PageComponentTextDisplayComponent>;

export interface PageComponentPageSeoComponent {
  id?: number;
  title?: string;
  description?: string;
  image?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
  article?: boolean;
}

export type PageComponentPageSeoComponentCollection = StrapiCollection<PageComponentPageSeoComponent>;
export type PageComponentPageSeoComponentEntity = StrapiEntity<PageComponentPageSeoComponent>;

export interface BlogRequest {
  data: {
    title?: string;
    author?: string;
    description?: string;
    heroImage?: BlogComponentMediaImageWithMetaComponent;
    bodyContent?: any[];
    featuredPost?: boolean;
    tags?: number | string[];
    locale?: string;
    localizations?: number | string[];
  };
}

export type BlogRequestCollection = StrapiCollection<BlogRequest>;
export type BlogRequestEntity = StrapiEntity<BlogRequest>;

export interface Blog {
  id?: number;
  documentId?: string;
  title?: string;
  author?: string;
  description?: string;
  heroImage?: BlogComponentMediaImageWithMetaComponent;
  bodyContent?: any[];
  featuredPost?: boolean;
  tags?: {
    id?: number;
    documentId?: string;
    name?: string;
    slug?: string;
    blogs?: {
    id?: number;
    documentId?: string;
    title?: string;
    author?: string;
    description?: string;
    heroImage?: BlogComponentMediaImageWithMetaComponent;
    bodyContent?: any[];
    featuredPost?: boolean;
    tags?: {
    id?: number;
    documentId?: string;
  }[];
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
  createdAt?: string;
  updatedAt?: string;
  publishedAt?: string;
  createdBy?: {
    id?: number;
    documentId?: string;
  };
  updatedBy?: {
    id?: number;
    documentId?: string;
  };
  locale?: string;
  localizations?: {
    id?: number;
    documentId?: string;
  }[];
}

export type BlogCollection = StrapiCollection<Blog>;
export type BlogEntity = StrapiEntity<Blog>;

export interface BlogResponse {
  data?: Blog;
  meta?: any;
}

export type BlogResponseCollection = StrapiCollection<BlogResponse>;
export type BlogResponseEntity = StrapiEntity<BlogResponse>;

export interface BlogComponentMediaImageWithMetaComponent {
  id?: number;
  imageAlt?: string;
  imageMedia?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
}

export type BlogComponentMediaImageWithMetaComponentCollection = StrapiCollection<BlogComponentMediaImageWithMetaComponent>;
export type BlogComponentMediaImageWithMetaComponentEntity = StrapiEntity<BlogComponentMediaImageWithMetaComponent>;

export interface BlogComponentDynamicBlogContentComponent {
  id?: number;
  __component?: 'blog-component.dynamic-blog-content';
  layoutType?: 'text' | 'image' | 'textRightImageLeft' | 'textLeftImageRight';
  textContent?: string;
  imageContent?: BlogComponentMediaImageWithMetaComponent;
}

export type BlogComponentDynamicBlogContentComponentCollection = StrapiCollection<BlogComponentDynamicBlogContentComponent>;
export type BlogComponentDynamicBlogContentComponentEntity = StrapiEntity<BlogComponentDynamicBlogContentComponent>;

export interface EventsEventRequest {
  data: {
    title?: string;
    description?: string;
    startDateTime?: string;
    marqueeImage?: number | string;
    endDateTime?: string;
    slug?: string;
    meta?: PageComponentPageSeoComponent;
    squareImage?: number | string;
    panelImage?: number | string;
    locale?: string;
    localizations?: number | string[];
  };
}

export type EventsEventRequestCollection = StrapiCollection<EventsEventRequest>;
export type EventsEventRequestEntity = StrapiEntity<EventsEventRequest>;

export interface EventsEvent {
  id?: number;
  documentId?: string;
  title?: string;
  description?: string;
  startDateTime?: string;
  marqueeImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
    name?: string;
    pathId?: number;
    parent?: {
    id?: number;
    documentId?: string;
  };
    children?: {
    id?: number;
    documentId?: string;
  }[];
    files?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
    firstname?: string;
    lastname?: string;
    username?: string;
    email?: string;
    resetPasswordToken?: string;
    registrationToken?: string;
    isActive?: boolean;
    roles?: {
    id?: number;
    documentId?: string;
    name?: string;
    code?: string;
    description?: string;
    users?: {
    id?: number;
    documentId?: string;
  }[];
    permissions?: {
    id?: number;
    documentId?: string;
    action?: string;
    actionParameters?: any;
    subject?: string;
    properties?: any;
    conditions?: any;
    role?: {
    id?: number;
    documentId?: string;
  };
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    blocked?: boolean;
    preferedLanguage?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    path?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
  endDateTime?: string;
  slug?: string;
  meta?: PageComponentPageSeoComponent;
  squareImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
  panelImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
  createdAt?: string;
  updatedAt?: string;
  publishedAt?: string;
  createdBy?: {
    id?: number;
    documentId?: string;
  };
  updatedBy?: {
    id?: number;
    documentId?: string;
  };
  locale?: string;
  localizations?: {
    id?: number;
    documentId?: string;
    title?: string;
    description?: string;
    startDateTime?: string;
    marqueeImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    endDateTime?: string;
    slug?: string;
    meta?: PageComponentPageSeoComponent;
    squareImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    panelImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
}

export type EventsEventCollection = StrapiCollection<EventsEvent>;
export type EventsEventEntity = StrapiEntity<EventsEvent>;

export interface EventsEventResponse {
  data?: EventsEvent;
  meta?: any;
}

export type EventsEventResponseCollection = StrapiCollection<EventsEventResponse>;
export type EventsEventResponseEntity = StrapiEntity<EventsEventResponse>;

export interface FaqRequest {
  data: {
    question: string;
    answer?: string;
    category?: 'general' | 'logistics' | 'etiquette' | 'tickets' | 'cook off';
    order?: number;
    locale?: string;
    localizations?: number | string[];
  };
}

export type FaqRequestCollection = StrapiCollection<FaqRequest>;
export type FaqRequestEntity = StrapiEntity<FaqRequest>;

export interface Faq {
  id?: number;
  documentId?: string;
  question: string;
  answer?: string;
  category?: 'general' | 'logistics' | 'etiquette' | 'tickets' | 'cook off';
  order?: number;
  createdAt?: string;
  updatedAt?: string;
  publishedAt?: string;
  createdBy?: {
    id?: number;
    documentId?: string;
    firstname?: string;
    lastname?: string;
    username?: string;
    email?: string;
    resetPasswordToken?: string;
    registrationToken?: string;
    isActive?: boolean;
    roles?: {
    id?: number;
    documentId?: string;
    name?: string;
    code?: string;
    description?: string;
    users?: {
    id?: number;
    documentId?: string;
  }[];
    permissions?: {
    id?: number;
    documentId?: string;
    action?: string;
    actionParameters?: any;
    subject?: string;
    properties?: any;
    conditions?: any;
    role?: {
    id?: number;
    documentId?: string;
  };
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    blocked?: boolean;
    preferedLanguage?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
  updatedBy?: {
    id?: number;
    documentId?: string;
  };
  locale?: string;
  localizations?: {
    id?: number;
    documentId?: string;
    question?: string;
    answer?: string;
    category?: 'general' | 'logistics' | 'etiquette' | 'tickets' | 'cook off';
    order?: number;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
}

export type FaqCollection = StrapiCollection<Faq>;
export type FaqEntity = StrapiEntity<Faq>;

export interface FaqResponse {
  data?: Faq;
  meta?: any;
}

export type FaqResponseCollection = StrapiCollection<FaqResponse>;
export type FaqResponseEntity = StrapiEntity<FaqResponse>;

export interface GalleryImagesGalleryImageRequest {
  data: {
    image?: number | string;
    title?: string;
    description?: string;
    page?: string;
    role?: 'marquee' | 'panel' | 'poster' | 'mural';
    photographer?: string;
    year?: number;
    locale?: string;
    localizations?: number | string[];
  };
}

export type GalleryImagesGalleryImageRequestCollection = StrapiCollection<GalleryImagesGalleryImageRequest>;
export type GalleryImagesGalleryImageRequestEntity = StrapiEntity<GalleryImagesGalleryImageRequest>;

export interface GalleryImagesGalleryImage {
  id?: number;
  documentId?: string;
  image?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
    name?: string;
    pathId?: number;
    parent?: {
    id?: number;
    documentId?: string;
  };
    children?: {
    id?: number;
    documentId?: string;
  }[];
    files?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
    firstname?: string;
    lastname?: string;
    username?: string;
    email?: string;
    resetPasswordToken?: string;
    registrationToken?: string;
    isActive?: boolean;
    roles?: {
    id?: number;
    documentId?: string;
    name?: string;
    code?: string;
    description?: string;
    users?: {
    id?: number;
    documentId?: string;
  }[];
    permissions?: {
    id?: number;
    documentId?: string;
    action?: string;
    actionParameters?: any;
    subject?: string;
    properties?: any;
    conditions?: any;
    role?: {
    id?: number;
    documentId?: string;
  };
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    blocked?: boolean;
    preferedLanguage?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    path?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
  title?: string;
  description?: string;
  page?: string;
  role?: 'marquee' | 'panel' | 'poster' | 'mural';
  photographer?: string;
  year?: number;
  createdAt?: string;
  updatedAt?: string;
  publishedAt?: string;
  createdBy?: {
    id?: number;
    documentId?: string;
  };
  updatedBy?: {
    id?: number;
    documentId?: string;
  };
  locale?: string;
  localizations?: {
    id?: number;
    documentId?: string;
    image?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    title?: string;
    description?: string;
    page?: string;
    role?: 'marquee' | 'panel' | 'poster' | 'mural';
    photographer?: string;
    year?: number;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
}

export type GalleryImagesGalleryImageCollection = StrapiCollection<GalleryImagesGalleryImage>;
export type GalleryImagesGalleryImageEntity = StrapiEntity<GalleryImagesGalleryImage>;

export interface GalleryImagesGalleryImageResponse {
  data?: GalleryImagesGalleryImage;
  meta?: any;
}

export type GalleryImagesGalleryImageResponseCollection = StrapiCollection<GalleryImagesGalleryImageResponse>;
export type GalleryImagesGalleryImageResponseEntity = StrapiEntity<GalleryImagesGalleryImageResponse>;

export interface HomePageRequest {
  data: {
    title?: string;
    marqueeImage?: number | string;
    primaryText?: string;
    featured?: PageComponentFeaturedSectionComponent;
    quoteContent?: PageComponentQuoteComponent;
    meta?: PageComponentPageSeoComponent;
    panelImage?: number | string;
    secondaryText?: string;
    locale?: string;
    localizations?: number | string[];
  };
}

export type HomePageRequestCollection = StrapiCollection<HomePageRequest>;
export type HomePageRequestEntity = StrapiEntity<HomePageRequest>;

export interface HomePage {
  id?: number;
  documentId?: string;
  title?: string;
  marqueeImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
    name?: string;
    pathId?: number;
    parent?: {
    id?: number;
    documentId?: string;
  };
    children?: {
    id?: number;
    documentId?: string;
  }[];
    files?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
    firstname?: string;
    lastname?: string;
    username?: string;
    email?: string;
    resetPasswordToken?: string;
    registrationToken?: string;
    isActive?: boolean;
    roles?: {
    id?: number;
    documentId?: string;
    name?: string;
    code?: string;
    description?: string;
    users?: {
    id?: number;
    documentId?: string;
  }[];
    permissions?: {
    id?: number;
    documentId?: string;
    action?: string;
    actionParameters?: any;
    subject?: string;
    properties?: any;
    conditions?: any;
    role?: {
    id?: number;
    documentId?: string;
  };
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    blocked?: boolean;
    preferedLanguage?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    path?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
  primaryText?: string;
  featured?: PageComponentFeaturedSectionComponent;
  quoteContent?: PageComponentQuoteComponent;
  meta?: PageComponentPageSeoComponent;
  panelImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
  secondaryText?: string;
  createdAt?: string;
  updatedAt?: string;
  publishedAt?: string;
  createdBy?: {
    id?: number;
    documentId?: string;
  };
  updatedBy?: {
    id?: number;
    documentId?: string;
  };
  locale?: string;
  localizations?: {
    id?: number;
    documentId?: string;
    title?: string;
    marqueeImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    primaryText?: string;
    featured?: PageComponentFeaturedSectionComponent;
    quoteContent?: PageComponentQuoteComponent;
    meta?: PageComponentPageSeoComponent;
    panelImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    secondaryText?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
}

export type HomePageCollection = StrapiCollection<HomePage>;
export type HomePageEntity = StrapiEntity<HomePage>;

export interface HomePageResponse {
  data?: HomePage;
  meta?: any;
}

export type HomePageResponseCollection = StrapiCollection<HomePageResponse>;
export type HomePageResponseEntity = StrapiEntity<HomePageResponse>;

export interface PageComponentFeaturedItemComponent {
  id?: number;
  title?: string;
  slug?: string;
  description?: string;
  image?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
  calloutText?: string;
}

export type PageComponentFeaturedItemComponentCollection = StrapiCollection<PageComponentFeaturedItemComponent>;
export type PageComponentFeaturedItemComponentEntity = StrapiEntity<PageComponentFeaturedItemComponent>;

export interface PageComponentFeaturedSectionComponent {
  id?: number;
  featuresList?: PageComponentFeaturedItemComponent[];
}

export type PageComponentFeaturedSectionComponentCollection = StrapiCollection<PageComponentFeaturedSectionComponent>;
export type PageComponentFeaturedSectionComponentEntity = StrapiEntity<PageComponentFeaturedSectionComponent>;

export interface LocalAttractionsLocalAttractionRequest {
  data: {
    name?: string;
    url?: string;
    marqueeImage?: number | string;
    description?: string;
    startTime?: string;
    endTime?: string;
    startDate?: string;
    endDate?: string;
    slug?: string;
    type?: 'lodging' | 'adventure' | 'dining';
    squareImage?: number | string;
    locale?: string;
    localizations?: number | string[];
  };
}

export type LocalAttractionsLocalAttractionRequestCollection = StrapiCollection<LocalAttractionsLocalAttractionRequest>;
export type LocalAttractionsLocalAttractionRequestEntity = StrapiEntity<LocalAttractionsLocalAttractionRequest>;

export interface LocalAttractionsLocalAttraction {
  id?: number;
  documentId?: string;
  name?: string;
  url?: string;
  marqueeImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
    name?: string;
    pathId?: number;
    parent?: {
    id?: number;
    documentId?: string;
  };
    children?: {
    id?: number;
    documentId?: string;
  }[];
    files?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
    firstname?: string;
    lastname?: string;
    username?: string;
    email?: string;
    resetPasswordToken?: string;
    registrationToken?: string;
    isActive?: boolean;
    roles?: {
    id?: number;
    documentId?: string;
    name?: string;
    code?: string;
    description?: string;
    users?: {
    id?: number;
    documentId?: string;
  }[];
    permissions?: {
    id?: number;
    documentId?: string;
    action?: string;
    actionParameters?: any;
    subject?: string;
    properties?: any;
    conditions?: any;
    role?: {
    id?: number;
    documentId?: string;
  };
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    blocked?: boolean;
    preferedLanguage?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    path?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
  description?: string;
  startTime?: string;
  endTime?: string;
  startDate?: string;
  endDate?: string;
  slug?: string;
  type?: 'lodging' | 'adventure' | 'dining';
  squareImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
  createdAt?: string;
  updatedAt?: string;
  publishedAt?: string;
  createdBy?: {
    id?: number;
    documentId?: string;
  };
  updatedBy?: {
    id?: number;
    documentId?: string;
  };
  locale?: string;
  localizations?: {
    id?: number;
    documentId?: string;
    name?: string;
    url?: string;
    marqueeImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    description?: string;
    startTime?: string;
    endTime?: string;
    startDate?: string;
    endDate?: string;
    slug?: string;
    type?: 'lodging' | 'adventure' | 'dining';
    squareImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
}

export type LocalAttractionsLocalAttractionCollection = StrapiCollection<LocalAttractionsLocalAttraction>;
export type LocalAttractionsLocalAttractionEntity = StrapiEntity<LocalAttractionsLocalAttraction>;

export interface LocalAttractionsLocalAttractionResponse {
  data?: LocalAttractionsLocalAttraction;
  meta?: any;
}

export type LocalAttractionsLocalAttractionResponseCollection = StrapiCollection<LocalAttractionsLocalAttractionResponse>;
export type LocalAttractionsLocalAttractionResponseEntity = StrapiEntity<LocalAttractionsLocalAttractionResponse>;

export interface MusicianRequest {
  data: {
    name?: string;
    website?: string;
    description?: string;
    image?: number | string;
    spotifyID?: string;
    musicVideoID?: string;
    setTime?: string;
    slug?: string;
    meta?: PageComponentPageSeoComponent;
    squareImage?: number | string;
    order?: number;
    year?: number;
    locale?: string;
    localizations?: number | string[];
  };
}

export type MusicianRequestCollection = StrapiCollection<MusicianRequest>;
export type MusicianRequestEntity = StrapiEntity<MusicianRequest>;

export interface Musician {
  id?: number;
  documentId?: string;
  name?: string;
  website?: string;
  description?: string;
  image?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
    name?: string;
    pathId?: number;
    parent?: {
    id?: number;
    documentId?: string;
  };
    children?: {
    id?: number;
    documentId?: string;
  }[];
    files?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
    firstname?: string;
    lastname?: string;
    username?: string;
    email?: string;
    resetPasswordToken?: string;
    registrationToken?: string;
    isActive?: boolean;
    roles?: {
    id?: number;
    documentId?: string;
    name?: string;
    code?: string;
    description?: string;
    users?: {
    id?: number;
    documentId?: string;
  }[];
    permissions?: {
    id?: number;
    documentId?: string;
    action?: string;
    actionParameters?: any;
    subject?: string;
    properties?: any;
    conditions?: any;
    role?: {
    id?: number;
    documentId?: string;
  };
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    blocked?: boolean;
    preferedLanguage?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    path?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
  spotifyID?: string;
  musicVideoID?: string;
  setTime?: string;
  slug?: string;
  meta?: PageComponentPageSeoComponent;
  squareImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
  order?: number;
  year?: number;
  createdAt?: string;
  updatedAt?: string;
  publishedAt?: string;
  createdBy?: {
    id?: number;
    documentId?: string;
  };
  updatedBy?: {
    id?: number;
    documentId?: string;
  };
  locale?: string;
  localizations?: {
    id?: number;
    documentId?: string;
    name?: string;
    website?: string;
    description?: string;
    image?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    spotifyID?: string;
    musicVideoID?: string;
    setTime?: string;
    slug?: string;
    meta?: PageComponentPageSeoComponent;
    squareImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    order?: number;
    year?: number;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
}

export type MusicianCollection = StrapiCollection<Musician>;
export type MusicianEntity = StrapiEntity<Musician>;

export interface MusicianResponse {
  data?: Musician;
  meta?: any;
}

export type MusicianResponseCollection = StrapiCollection<MusicianResponse>;
export type MusicianResponseEntity = StrapiEntity<MusicianResponse>;

export interface ResourcesResourceRequest {
  data: {
    file?: number | string;
    name?: string;
    locale?: string;
    localizations?: number | string[];
  };
}

export type ResourcesResourceRequestCollection = StrapiCollection<ResourcesResourceRequest>;
export type ResourcesResourceRequestEntity = StrapiEntity<ResourcesResourceRequest>;

export interface ResourcesResource {
  id?: number;
  documentId?: string;
  file?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
    name?: string;
    pathId?: number;
    parent?: {
    id?: number;
    documentId?: string;
  };
    children?: {
    id?: number;
    documentId?: string;
  }[];
    files?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
    firstname?: string;
    lastname?: string;
    username?: string;
    email?: string;
    resetPasswordToken?: string;
    registrationToken?: string;
    isActive?: boolean;
    roles?: {
    id?: number;
    documentId?: string;
    name?: string;
    code?: string;
    description?: string;
    users?: {
    id?: number;
    documentId?: string;
  }[];
    permissions?: {
    id?: number;
    documentId?: string;
    action?: string;
    actionParameters?: any;
    subject?: string;
    properties?: any;
    conditions?: any;
    role?: {
    id?: number;
    documentId?: string;
  };
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    blocked?: boolean;
    preferedLanguage?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    path?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
  name?: string;
  createdAt?: string;
  updatedAt?: string;
  publishedAt?: string;
  createdBy?: {
    id?: number;
    documentId?: string;
  };
  updatedBy?: {
    id?: number;
    documentId?: string;
  };
  locale?: string;
  localizations?: {
    id?: number;
    documentId?: string;
    file?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    name?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
}

export type ResourcesResourceCollection = StrapiCollection<ResourcesResource>;
export type ResourcesResourceEntity = StrapiEntity<ResourcesResource>;

export interface ResourcesResourceResponse {
  data?: ResourcesResource;
  meta?: any;
}

export type ResourcesResourceResponseCollection = StrapiCollection<ResourcesResourceResponse>;
export type ResourcesResourceResponseEntity = StrapiEntity<ResourcesResourceResponse>;

export interface SponsorsSponsorRequest {
  data: {
    name?: string;
    description?: string;
    priority?: number;
    email?: string;
    logo?: number | string;
    tagline?: string;
    website?: string;
    locale?: string;
    localizations?: number | string[];
  };
}

export type SponsorsSponsorRequestCollection = StrapiCollection<SponsorsSponsorRequest>;
export type SponsorsSponsorRequestEntity = StrapiEntity<SponsorsSponsorRequest>;

export interface SponsorsSponsor {
  id?: number;
  documentId?: string;
  name?: string;
  description?: string;
  priority?: number;
  email?: string;
  logo?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
    name?: string;
    pathId?: number;
    parent?: {
    id?: number;
    documentId?: string;
  };
    children?: {
    id?: number;
    documentId?: string;
  }[];
    files?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
    firstname?: string;
    lastname?: string;
    username?: string;
    email?: string;
    resetPasswordToken?: string;
    registrationToken?: string;
    isActive?: boolean;
    roles?: {
    id?: number;
    documentId?: string;
    name?: string;
    code?: string;
    description?: string;
    users?: {
    id?: number;
    documentId?: string;
  }[];
    permissions?: {
    id?: number;
    documentId?: string;
    action?: string;
    actionParameters?: any;
    subject?: string;
    properties?: any;
    conditions?: any;
    role?: {
    id?: number;
    documentId?: string;
  };
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    blocked?: boolean;
    preferedLanguage?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    path?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
  tagline?: string;
  website?: string;
  createdAt?: string;
  updatedAt?: string;
  publishedAt?: string;
  createdBy?: {
    id?: number;
    documentId?: string;
  };
  updatedBy?: {
    id?: number;
    documentId?: string;
  };
  locale?: string;
  localizations?: {
    id?: number;
    documentId?: string;
    name?: string;
    description?: string;
    priority?: number;
    email?: string;
    logo?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    tagline?: string;
    website?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
}

export type SponsorsSponsorCollection = StrapiCollection<SponsorsSponsor>;
export type SponsorsSponsorEntity = StrapiEntity<SponsorsSponsor>;

export interface SponsorsSponsorResponse {
  data?: SponsorsSponsor;
  meta?: any;
}

export type SponsorsSponsorResponseCollection = StrapiCollection<SponsorsSponsorResponse>;
export type SponsorsSponsorResponseEntity = StrapiEntity<SponsorsSponsorResponse>;

export interface TagRequest {
  data: {
    name?: string;
    slug?: string;
    blogs?: number | string[];
    locale?: string;
    localizations?: number | string[];
  };
}

export type TagRequestCollection = StrapiCollection<TagRequest>;
export type TagRequestEntity = StrapiEntity<TagRequest>;

export interface Tag {
  id?: number;
  documentId?: string;
  name?: string;
  slug?: string;
  blogs?: {
    id?: number;
    documentId?: string;
    title?: string;
    author?: string;
    description?: string;
    heroImage?: BlogComponentMediaImageWithMetaComponent;
    bodyContent?: any[];
    featuredPost?: boolean;
    tags?: {
    id?: number;
    documentId?: string;
    name?: string;
    slug?: string;
    blogs?: {
    id?: number;
    documentId?: string;
  }[];
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
  createdAt?: string;
  updatedAt?: string;
  publishedAt?: string;
  createdBy?: {
    id?: number;
    documentId?: string;
  };
  updatedBy?: {
    id?: number;
    documentId?: string;
  };
  locale?: string;
  localizations?: {
    id?: number;
    documentId?: string;
  }[];
}

export type TagCollection = StrapiCollection<Tag>;
export type TagEntity = StrapiEntity<Tag>;

export interface TagResponse {
  data?: Tag;
  meta?: any;
}

export type TagResponseCollection = StrapiCollection<TagResponse>;
export type TagResponseEntity = StrapiEntity<TagResponse>;

export interface ThankYouRequest {
  data: {
    marqueeImage?: number | string;
    title?: string;
    message?: string;
    meta?: PageComponentPageSeoComponent;
    panelImage?: number | string;
    locale?: string;
    localizations?: number | string[];
  };
}

export type ThankYouRequestCollection = StrapiCollection<ThankYouRequest>;
export type ThankYouRequestEntity = StrapiEntity<ThankYouRequest>;

export interface ThankYou {
  id?: number;
  documentId?: string;
  marqueeImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
    name?: string;
    pathId?: number;
    parent?: {
    id?: number;
    documentId?: string;
  };
    children?: {
    id?: number;
    documentId?: string;
  }[];
    files?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
    firstname?: string;
    lastname?: string;
    username?: string;
    email?: string;
    resetPasswordToken?: string;
    registrationToken?: string;
    isActive?: boolean;
    roles?: {
    id?: number;
    documentId?: string;
    name?: string;
    code?: string;
    description?: string;
    users?: {
    id?: number;
    documentId?: string;
  }[];
    permissions?: {
    id?: number;
    documentId?: string;
    action?: string;
    actionParameters?: any;
    subject?: string;
    properties?: any;
    conditions?: any;
    role?: {
    id?: number;
    documentId?: string;
  };
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    blocked?: boolean;
    preferedLanguage?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    path?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
  title?: string;
  message?: string;
  meta?: PageComponentPageSeoComponent;
  panelImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
  createdAt?: string;
  updatedAt?: string;
  publishedAt?: string;
  createdBy?: {
    id?: number;
    documentId?: string;
  };
  updatedBy?: {
    id?: number;
    documentId?: string;
  };
  locale?: string;
  localizations?: {
    id?: number;
    documentId?: string;
    marqueeImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    title?: string;
    message?: string;
    meta?: PageComponentPageSeoComponent;
    panelImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
}

export type ThankYouCollection = StrapiCollection<ThankYou>;
export type ThankYouEntity = StrapiEntity<ThankYou>;

export interface ThankYouResponse {
  data?: ThankYou;
  meta?: any;
}

export type ThankYouResponseCollection = StrapiCollection<ThankYouResponse>;
export type ThankYouResponseEntity = StrapiEntity<ThankYouResponse>;

export interface TicketHolderRequest {
  data: {
    name?: string;
    numberOfTickets?: number;
    email?: string;
    phoneNumber?: string;
    customerID?: string;
    transactionID?: string;
    timeOfPurchase?: string;
    cookOffYear?: number;
    firstName?: string;
    lastName?: string;
    recipientFirstName?: string;
    recipientLastName?: string;
    locale?: string;
    localizations?: number | string[];
  };
}

export type TicketHolderRequestCollection = StrapiCollection<TicketHolderRequest>;
export type TicketHolderRequestEntity = StrapiEntity<TicketHolderRequest>;

export interface TicketHolder {
  id?: number;
  documentId?: string;
  name?: string;
  numberOfTickets?: number;
  email?: string;
  phoneNumber?: string;
  customerID?: string;
  transactionID?: string;
  timeOfPurchase?: string;
  cookOffYear?: number;
  firstName?: string;
  lastName?: string;
  recipientFirstName?: string;
  recipientLastName?: string;
  createdAt?: string;
  updatedAt?: string;
  publishedAt?: string;
  createdBy?: {
    id?: number;
    documentId?: string;
    firstname?: string;
    lastname?: string;
    username?: string;
    email?: string;
    resetPasswordToken?: string;
    registrationToken?: string;
    isActive?: boolean;
    roles?: {
    id?: number;
    documentId?: string;
    name?: string;
    code?: string;
    description?: string;
    users?: {
    id?: number;
    documentId?: string;
  }[];
    permissions?: {
    id?: number;
    documentId?: string;
    action?: string;
    actionParameters?: any;
    subject?: string;
    properties?: any;
    conditions?: any;
    role?: {
    id?: number;
    documentId?: string;
  };
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    blocked?: boolean;
    preferedLanguage?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
  updatedBy?: {
    id?: number;
    documentId?: string;
  };
  locale?: string;
  localizations?: {
    id?: number;
    documentId?: string;
    name?: string;
    numberOfTickets?: number;
    email?: string;
    phoneNumber?: string;
    customerID?: string;
    transactionID?: string;
    timeOfPurchase?: string;
    cookOffYear?: number;
    firstName?: string;
    lastName?: string;
    recipientFirstName?: string;
    recipientLastName?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
}

export type TicketHolderCollection = StrapiCollection<TicketHolder>;
export type TicketHolderEntity = StrapiEntity<TicketHolder>;

export interface TicketHolderResponse {
  data?: TicketHolder;
  meta?: any;
}

export type TicketHolderResponseCollection = StrapiCollection<TicketHolderResponse>;
export type TicketHolderResponseEntity = StrapiEntity<TicketHolderResponse>;

export interface TicketsTicketRequest {
  data: {
    title?: string;
    marqueeImage?: number | string;
    panelImage?: number | string;
    meta?: PageComponentPageSeoComponent;
    locale?: string;
    localizations?: number | string[];
  };
}

export type TicketsTicketRequestCollection = StrapiCollection<TicketsTicketRequest>;
export type TicketsTicketRequestEntity = StrapiEntity<TicketsTicketRequest>;

export interface TicketsTicket {
  id?: number;
  documentId?: string;
  title?: string;
  marqueeImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
    name?: string;
    pathId?: number;
    parent?: {
    id?: number;
    documentId?: string;
  };
    children?: {
    id?: number;
    documentId?: string;
  }[];
    files?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
    firstname?: string;
    lastname?: string;
    username?: string;
    email?: string;
    resetPasswordToken?: string;
    registrationToken?: string;
    isActive?: boolean;
    roles?: {
    id?: number;
    documentId?: string;
    name?: string;
    code?: string;
    description?: string;
    users?: {
    id?: number;
    documentId?: string;
  }[];
    permissions?: {
    id?: number;
    documentId?: string;
    action?: string;
    actionParameters?: any;
    subject?: string;
    properties?: any;
    conditions?: any;
    role?: {
    id?: number;
    documentId?: string;
  };
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    blocked?: boolean;
    preferedLanguage?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    path?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
  panelImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
  meta?: PageComponentPageSeoComponent;
  createdAt?: string;
  updatedAt?: string;
  publishedAt?: string;
  createdBy?: {
    id?: number;
    documentId?: string;
  };
  updatedBy?: {
    id?: number;
    documentId?: string;
  };
  locale?: string;
  localizations?: {
    id?: number;
    documentId?: string;
    title?: string;
    marqueeImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    panelImage?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    meta?: PageComponentPageSeoComponent;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
}

export type TicketsTicketCollection = StrapiCollection<TicketsTicket>;
export type TicketsTicketEntity = StrapiEntity<TicketsTicket>;

export interface TicketsTicketResponse {
  data?: TicketsTicket;
  meta?: any;
}

export type TicketsTicketResponseCollection = StrapiCollection<TicketsTicketResponse>;
export type TicketsTicketResponseEntity = StrapiEntity<TicketsTicketResponse>;

export interface WinnersWinnerRequest {
  data: {
    name?: string;
    description?: string;
    image?: number | string;
    rank?: number;
    year?: number;
    competition?: 'saturdaychili' | 'openshow' | 'limitedshow' | 'beans' | 'lastchancechili' | 'margaritas' | 'salsa' | 'ribs' | 'chicken';
    locale?: string;
    localizations?: number | string[];
  };
}

export type WinnersWinnerRequestCollection = StrapiCollection<WinnersWinnerRequest>;
export type WinnersWinnerRequestEntity = StrapiEntity<WinnersWinnerRequest>;

export interface WinnersWinner {
  id?: number;
  documentId?: string;
  name?: string;
  description?: string;
  image?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
    name?: string;
    pathId?: number;
    parent?: {
    id?: number;
    documentId?: string;
  };
    children?: {
    id?: number;
    documentId?: string;
  }[];
    files?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
    firstname?: string;
    lastname?: string;
    username?: string;
    email?: string;
    resetPasswordToken?: string;
    registrationToken?: string;
    isActive?: boolean;
    roles?: {
    id?: number;
    documentId?: string;
    name?: string;
    code?: string;
    description?: string;
    users?: {
    id?: number;
    documentId?: string;
  }[];
    permissions?: {
    id?: number;
    documentId?: string;
    action?: string;
    actionParameters?: any;
    subject?: string;
    properties?: any;
    conditions?: any;
    role?: {
    id?: number;
    documentId?: string;
  };
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    blocked?: boolean;
    preferedLanguage?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
    path?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
  rank?: number;
  year?: number;
  competition?: 'saturdaychili' | 'openshow' | 'limitedshow' | 'beans' | 'lastchancechili' | 'margaritas' | 'salsa' | 'ribs' | 'chicken';
  createdAt?: string;
  updatedAt?: string;
  publishedAt?: string;
  createdBy?: {
    id?: number;
    documentId?: string;
  };
  updatedBy?: {
    id?: number;
    documentId?: string;
  };
  locale?: string;
  localizations?: {
    id?: number;
    documentId?: string;
    name?: string;
    description?: string;
    image?: {
    id?: number;
    documentId?: string;
    name?: string;
    alternativeText?: string;
    caption?: string;
    width?: number;
    height?: number;
    formats?: any;
    hash?: string;
    ext?: string;
    mime?: string;
    size?: number;
    url?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: any;
    related?: {
    id?: number;
    documentId?: string;
  }[];
    folder?: {
    id?: number;
    documentId?: string;
  };
    folderPath?: string;
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  };
    rank?: number;
    year?: number;
    competition?: 'saturdaychili' | 'openshow' | 'limitedshow' | 'beans' | 'lastchancechili' | 'margaritas' | 'salsa' | 'ribs' | 'chicken';
    createdAt?: string;
    updatedAt?: string;
    publishedAt?: string;
    createdBy?: {
    id?: number;
    documentId?: string;
  };
    updatedBy?: {
    id?: number;
    documentId?: string;
  };
    locale?: string;
    localizations?: {
    id?: number;
    documentId?: string;
  }[];
  }[];
}

export type WinnersWinnerCollection = StrapiCollection<WinnersWinner>;
export type WinnersWinnerEntity = StrapiEntity<WinnersWinner>;

export interface WinnersWinnerResponse {
  data?: WinnersWinner;
  meta?: any;
}

export type WinnersWinnerResponseCollection = StrapiCollection<WinnersWinnerResponse>;
export type WinnersWinnerResponseEntity = StrapiEntity<WinnersWinnerResponse>;

export interface UploadFile {
  id?: number;
  name?: string;
  alternativeText?: string;
  caption?: string;
  width?: number;
  height?: number;
  formats?: number;
  hash?: string;
  ext?: string;
  mime?: string;
  size?: number;
  url?: string;
  previewUrl?: string;
  provider?: string;
  provider_metadata?: any;
  createdAt?: string;
  updatedAt?: string;
}

export type UploadFileCollection = StrapiCollection<UploadFile>;
export type UploadFileEntity = StrapiEntity<UploadFile>;

export interface UsersPermissionsRole {
  id?: number;
  name?: string;
  description?: string;
  type?: string;
  createdAt?: string;
  updatedAt?: string;
}

export type UsersPermissionsRoleCollection = StrapiCollection<UsersPermissionsRole>;
export type UsersPermissionsRoleEntity = StrapiEntity<UsersPermissionsRole>;

export interface UsersPermissionsUser {
  id?: number;
  username?: string;
  email?: string;
  provider?: string;
  confirmed?: boolean;
  blocked?: boolean;
  createdAt?: string;
  updatedAt?: string;
}

export type UsersPermissionsUserCollection = StrapiCollection<UsersPermissionsUser>;
export type UsersPermissionsUserEntity = StrapiEntity<UsersPermissionsUser>;

export interface UsersPermissionsUserRegistration {
  jwt?: string;
  user?: UsersPermissionsUser;
}

export type UsersPermissionsUserRegistrationCollection = StrapiCollection<UsersPermissionsUserRegistration>;
export type UsersPermissionsUserRegistrationEntity = StrapiEntity<UsersPermissionsUserRegistration>;

export interface UsersPermissionsPermissionsTree {
}

export type UsersPermissionsPermissionsTreeCollection = StrapiCollection<UsersPermissionsPermissionsTree>;
export type UsersPermissionsPermissionsTreeEntity = StrapiEntity<UsersPermissionsPermissionsTree>;

